{"id":"7f417734d5d6a23c6facb9b6e74bafa0","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"src/contracts/BridgeContract.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.19;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./interfaces/ILayerZeroEndpoint.sol\";\r\nimport \"./PriceConsumer.sol\";\r\n\r\ncontract BridgeContract is Ownable, ReentrancyGuard {\r\n    ILayerZeroEndpoint public immutable lzEndpoint;\r\n    PriceConsumer public immutable priceConsumer;\r\n\r\n    mapping(uint16 => bytes) public trustedRemoteLookup;\r\n    mapping(uint16 => uint256) public minDstGasLookup;\r\n\r\n    struct BridgeParams {\r\n        uint16 dstChainId;\r\n        bytes toAddress;\r\n        uint256 amount;\r\n        address payable refundAddress;\r\n        address zroPaymentAddress;\r\n        bytes adapterParams;\r\n        bytes priceProof;\r\n    }\r\n\r\n    event TokensSent(\r\n        address indexed from,\r\n        uint16 indexed dstChainId,\r\n        bytes toAddress,\r\n        uint256 amount,\r\n        uint256 price\r\n    );\r\n\r\n    event TokensReceived(\r\n        address indexed to,\r\n        uint16 indexed srcChainId,\r\n        uint256 amount,\r\n        uint256 price\r\n    );\r\n\r\n    constructor(address _lzEndpoint, address _priceConsumer) Ownable() {\r\n        lzEndpoint = ILayerZeroEndpoint(_lzEndpoint);\r\n        priceConsumer = PriceConsumer(_priceConsumer);\r\n    }\r\n\r\n    function sendTokens(\r\n        BridgeParams calldata params\r\n    ) external payable nonReentrant {\r\n        require(params.amount > 0, \"Invalid amount\");\r\n        require(\r\n            trustedRemoteLookup[params.dstChainId].length != 0,\r\n            \"Destination chain not trusted\"\r\n        );\r\n\r\n        // Get the verified price using Supra Oracle\r\n        (uint256 price, , ) = priceConsumer.getPriceDataWithRound(\r\n            params.priceProof,\r\n            0\r\n        );\r\n\r\n        bytes memory payload = abi.encode(\r\n            params.toAddress,\r\n            params.amount,\r\n            price\r\n        );\r\n\r\n        // Send cross-chain message via LayerZero\r\n        lzEndpoint.send{value: msg.value}(\r\n            params.dstChainId,\r\n            trustedRemoteLookup[params.dstChainId],\r\n            payload,\r\n            params.refundAddress,\r\n            params.zroPaymentAddress,\r\n            params.adapterParams\r\n        );\r\n\r\n        emit TokensSent(\r\n            msg.sender,\r\n            params.dstChainId,\r\n            params.toAddress,\r\n            params.amount,\r\n            price\r\n        );\r\n    }\r\n\r\n    function estimateFees(\r\n        uint16 _dstChainId,\r\n        bytes calldata _toAddress,\r\n        uint256 _amount,\r\n        bytes calldata _adapterParams\r\n    ) external view returns (uint256 nativeFee, uint256 zroFee) {\r\n        bytes memory payload = abi.encode(_toAddress, _amount, 0);\r\n        return\r\n            lzEndpoint.estimateFees(\r\n                _dstChainId,\r\n                address(this),\r\n                payload,\r\n                false,\r\n                _adapterParams\r\n            );\r\n    }\r\n\r\n    function setTrustedRemote(\r\n        uint16 _remoteChainId,\r\n        bytes calldata _path\r\n    ) external onlyOwner {\r\n        trustedRemoteLookup[_remoteChainId] = _path;\r\n    }\r\n\r\n    function setMinDstGas(\r\n        uint16 _dstChainId,\r\n        uint256 _minGas\r\n    ) external onlyOwner {\r\n        minDstGasLookup[_dstChainId] = _minGas;\r\n    }\r\n\r\n    function rescueTokens(\r\n        address _token,\r\n        address _to,\r\n        uint256 _amount\r\n    ) external onlyOwner {\r\n        IERC20(_token).transfer(_to, _amount);\r\n    }\r\n}\r\n"},"src/contracts/interfaces/ILayerZeroEndpoint.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\ninterface ILayerZeroEndpoint {\r\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\r\n    // @param _dstChainId - the destination chain identifier\r\n    // @param _destination - the address on destination chain (in bytes)\r\n    // @param _payload - a custom bytes payload to send to the destination contract\r\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\r\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\r\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\r\n    function send(\r\n        uint16 _dstChainId,\r\n        bytes calldata _destination,\r\n        bytes calldata _payload,\r\n        address payable _refundAddress,\r\n        address _zroPaymentAddress,\r\n        bytes calldata _adapterParams\r\n    ) external payable;\r\n\r\n    // @notice used by the messaging library to publish verified payload\r\n    // @param _srcChainId - the source chain identifier\r\n    // @param _srcAddress - the source contract (as bytes) at the source chain\r\n    // @param _dstAddress - the address on destination chain\r\n    // @param _nonce - the ordered message nonce\r\n    // @param _gasLimit - the gas limit for external contract execution\r\n    // @param _payload - verified payload to send to the destination contract\r\n    function receivePayload(\r\n        uint16 _srcChainId,\r\n        bytes calldata _srcAddress,\r\n        address _dstAddress,\r\n        uint64 _nonce,\r\n        uint _gasLimit,\r\n        bytes calldata _payload\r\n    ) external;\r\n\r\n    // @notice get the inboundNonce of a receiver from a source chain\r\n    // @param _srcChainId - the source chain identifier\r\n    // @param _srcAddress - the source chain contract address\r\n    function getInboundNonce(\r\n        uint16 _srcChainId,\r\n        bytes calldata _srcAddress\r\n    ) external view returns (uint64);\r\n\r\n    // @notice get the outboundNonce from this source chain to a destination chain\r\n    // @param _dstChainId - the destination chain identifier\r\n    // @param _srcAddress - the source chain contract address\r\n    function getOutboundNonce(\r\n        uint16 _dstChainId,\r\n        address _srcAddress\r\n    ) external view returns (uint64);\r\n\r\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\r\n    // @param _dstChainId - the destination chain identifier\r\n    // @param _userApplication - the user app address on this chain\r\n    // @param _payload - the custom message to send over LayerZero\r\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\r\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\r\n    function estimateFees(\r\n        uint16 _dstChainId,\r\n        address _userApplication,\r\n        bytes calldata _payload,\r\n        bool _payInZRO,\r\n        bytes calldata _adapterParam\r\n    ) external view returns (uint nativeFee, uint zroFee);\r\n}\r\n"},"src/contracts/interfaces/ISupraOraclePull.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.19;\r\n\r\ninterface ISupraOraclePull {\r\n    struct PriceData {\r\n        uint256[] pairs;\r\n        uint256[] prices;\r\n        uint256[] decimals;\r\n    }\r\n\r\n    struct PriceInfo {\r\n        uint256[] pairs;\r\n        uint256[] prices;\r\n        uint256[] timestamp;\r\n        uint256[] decimal;\r\n        uint256[] round;\r\n    }\r\n\r\n    function verifyOracleProof(bytes calldata _bytesproof) \r\n        external \r\n        returns (PriceData memory);\r\n\r\n    function verifyOracleProofV2(bytes calldata _bytesProof) \r\n        external     \r\n        returns (PriceInfo memory);\r\n}"},"src/contracts/PriceConsumer.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.19;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./interfaces/ISupraOraclePull.sol\";\r\n\r\ncontract PriceConsumer is Ownable {\r\n    ISupraOraclePull public oracle;\r\n    \r\n    event PriceReceived(uint256 pair, uint256 price, uint256 timestamp, uint256 round);\r\n    \r\n    constructor(address oracleAddress) Ownable() {\r\n        oracle = ISupraOraclePull(oracleAddress);\r\n    }\r\n    \r\n    function getPriceData(bytes calldata _bytesProof, uint256 pair) \r\n        external \r\n        returns (uint256 price, uint256 decimals) \r\n    {\r\n        ISupraOraclePull.PriceData memory prices = oracle.verifyOracleProof(_bytesProof);\r\n        \r\n        for (uint256 i = 0; i < prices.pairs.length; i++) {\r\n            if (prices.pairs[i] == pair) {\r\n                return (prices.prices[i], prices.decimals[i]);\r\n            }\r\n        }\r\n        revert(\"Pair not found\");\r\n    }\r\n    \r\n    function getPriceDataWithRound(bytes calldata _bytesProof, uint256 pair) \r\n        external \r\n        returns (uint256 price, uint256 timestamp, uint256 round) \r\n    {\r\n        ISupraOraclePull.PriceInfo memory prices = oracle.verifyOracleProofV2(_bytesProof);\r\n        \r\n        for (uint256 i = 0; i < prices.pairs.length; i++) {\r\n            if (prices.pairs[i] == pair) {\r\n                price = prices.prices[i];\r\n                timestamp = prices.timestamp[i];\r\n                round = prices.round[i];\r\n                emit PriceReceived(pair, price, timestamp, round);\r\n                return (price, timestamp, round);\r\n            }\r\n        }\r\n        revert(\"Pair not found\");\r\n    }\r\n    \r\n    function updateOracleAddress(address newOracleAddress) external onlyOwner {\r\n        oracle = ISupraOraclePull(newOracleAddress);\r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[285],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":286,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":285,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,285],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"137:750:1","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"ReentrancyGuard","nameLocation":"906:15:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":118,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:1","nodeType":"VariableDeclaration","scope":177,"src":"1676:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":121,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:1","nodeType":"VariableDeclaration","scope":177,"src":"1723:37:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":123,"mutability":"mutable","name":"_status","nameLocation":"1783:7:1","nodeType":"VariableDeclaration","scope":177,"src":"1767:23:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":130,"nodeType":"Block","src":"1811:39:1","statements":[{"expression":{"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":126,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"1821:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":127,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1831:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"nodeType":"ExpressionStatement","src":"1821:22:1"}]},"id":131,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"1808:2:1"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"1811:0:1"},"scope":177,"src":"1797:53:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":141,"nodeType":"Block","src":"2251:79:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":134,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2261:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":136,"nodeType":"ExpressionStatement","src":"2261:21:1"},{"id":137,"nodeType":"PlaceholderStatement","src":"2292:1:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":138,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"2303:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":140,"nodeType":"ExpressionStatement","src":"2303:20:1"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"1856:366:1","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":142,"name":"nonReentrant","nameLocation":"2236:12:1","nodeType":"ModifierDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"2248:2:1"},"src":"2227:103:1","virtual":false,"visibility":"internal"},{"body":{"id":156,"nodeType":"Block","src":"2375:248:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":146,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2468:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":147,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2479:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":151,"nodeType":"ExpressionStatement","src":"2460:63:1"},{"expression":{"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":152,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2598:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":153,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2608:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":155,"nodeType":"ExpressionStatement","src":"2598:18:1"}]},"id":157,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"2364:2:1"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[],"src":"2375:0:1"},"scope":177,"src":"2336:287:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":164,"nodeType":"Block","src":"2667:171:1","statements":[{"expression":{"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":160,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2809:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":161,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2819:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":163,"nodeType":"ExpressionStatement","src":"2809:22:1"}]},"id":165,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:1","nodeType":"FunctionDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"2656:2:1"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"2667:0:1"},"scope":177,"src":"2629:209:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":175,"nodeType":"Block","src":"3081:43:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":171,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":172,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"3109:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":170,"id":174,"nodeType":"Return","src":"3091:26:1"}]},"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"2844:168:1","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:1","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"3049:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"3075:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":168,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:1"},"scope":177,"src":"3017:107:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":178,"src":"888:2238:1","usedErrors":[]}],"src":"112:3015:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[255]},"id":256,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"131:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":255,"linearizedBaseContracts":[255],"name":"IERC20","nameLocation":"212:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"225:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":189,"name":"Transfer","nameLocation":"394:8:2","nodeType":"EventDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:2","nodeType":"VariableDeclaration","scope":189,"src":"403:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:2","nodeType":"VariableDeclaration","scope":189,"src":"425:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:2","nodeType":"VariableDeclaration","scope":189,"src":"445:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:2"},"src":"388:72:2"},{"anonymous":false,"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"466:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":198,"name":"Approval","nameLocation":"625:8:2","nodeType":"EventDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:2","nodeType":"VariableDeclaration","scope":198,"src":"634:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":194,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:2","nodeType":"VariableDeclaration","scope":198,"src":"657:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":196,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:2","nodeType":"VariableDeclaration","scope":198,"src":"682:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:2"},"src":"619:78:2"},{"documentation":{"id":199,"nodeType":"StructuredDocumentation","src":"703:66:2","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":204,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":204,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":255,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"835:72:2","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":212,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:2","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"account","nameLocation":"939:7:2","nodeType":"VariableDeclaration","scope":212,"src":"931:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:2"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":212,"src":"971:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":209,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:2"},"scope":255,"src":"912:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"986:202:2","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":222,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:2","nodeType":"FunctionDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"to","nameLocation":"1219:2:2","nodeType":"VariableDeclaration","scope":222,"src":"1211:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"amount","nameLocation":"1231:6:2","nodeType":"VariableDeclaration","scope":222,"src":"1223:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:2"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":222,"src":"1257:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":219,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:2"},"scope":255,"src":"1193:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"1269:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":232,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:2","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"owner","nameLocation":"1565:5:2","nodeType":"VariableDeclaration","scope":232,"src":"1557:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":227,"mutability":"mutable","name":"spender","nameLocation":"1580:7:2","nodeType":"VariableDeclaration","scope":232,"src":"1572:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:2"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":232,"src":"1612:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:2"},"scope":255,"src":"1538:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"1627:642:2","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":242,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:2","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"spender","nameLocation":"2299:7:2","nodeType":"VariableDeclaration","scope":242,"src":"2291:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"amount","nameLocation":"2316:6:2","nodeType":"VariableDeclaration","scope":242,"src":"2308:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:2"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":242,"src":"2342:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:2"},"scope":255,"src":"2274:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"2354:287:2","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":254,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:2","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"from","nameLocation":"2676:4:2","nodeType":"VariableDeclaration","scope":254,"src":"2668:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"to","nameLocation":"2690:2:2","nodeType":"VariableDeclaration","scope":254,"src":"2682:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"amount","nameLocation":"2702:6:2","nodeType":"VariableDeclaration","scope":254,"src":"2694:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:2"},"returnParameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":254,"src":"2728:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":251,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:2"},"scope":255,"src":"2646:88:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":256,"src":"202:2534:2","usedErrors":[]}],"src":"106:2631:2"},"id":2},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[285]},"id":286,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":257,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:3"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"126:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":285,"linearizedBaseContracts":[285],"name":"Context","nameLocation":"641:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":266,"nodeType":"Block","src":"717:34:3","statements":[{"expression":{"expression":{"id":263,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:3","memberName":"sender","nodeType":"MemberAccess","src":"734:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":262,"id":265,"nodeType":"Return","src":"727:17:3"}]},"id":267,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:3","nodeType":"FunctionDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[],"src":"674:2:3"},"returnParameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":267,"src":"708:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:3"},"scope":285,"src":"655:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":275,"nodeType":"Block","src":"824:32:3","statements":[{"expression":{"expression":{"id":272,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:3","memberName":"data","nodeType":"MemberAccess","src":"841:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":271,"id":274,"nodeType":"Return","src":"834:15:3"}]},"id":276,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:3","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[],"src":"774:2:3"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":276,"src":"808:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":269,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:3"},"scope":285,"src":"757:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":283,"nodeType":"Block","src":"934:25:3","statements":[{"expression":{"hexValue":"30","id":281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":280,"id":282,"nodeType":"Return","src":"944:8:3"}]},"id":284,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:3","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[],"src":"891:2:3"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":284,"src":"925:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:3"},"scope":285,"src":"862:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":286,"src":"623:338:3","usedErrors":[]}],"src":"101:861:3"},"id":3},"src/contracts/BridgeContract.sol":{"ast":{"absolutePath":"src/contracts/BridgeContract.sol","exportedSymbols":{"BridgeContract":[540],"Context":[285],"IERC20":[255],"ILayerZeroEndpoint":[797],"ISupraOraclePull":[842],"Ownable":[112],"PriceConsumer":[729],"ReentrancyGuard":[177]},"id":541,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":287,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"33:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":541,"sourceUnit":256,"src":"60:56:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":289,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":541,"sourceUnit":178,"src":"118:62:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":541,"sourceUnit":113,"src":"182:52:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/contracts/interfaces/ILayerZeroEndpoint.sol","file":"./interfaces/ILayerZeroEndpoint.sol","id":291,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":541,"sourceUnit":798,"src":"236:45:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/contracts/PriceConsumer.sol","file":"./PriceConsumer.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":541,"sourceUnit":730,"src":"283:29:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":293,"name":"Ownable","nameLocations":["343:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"343:7:4"},"id":294,"nodeType":"InheritanceSpecifier","src":"343:7:4"},{"baseName":{"id":295,"name":"ReentrancyGuard","nameLocations":["352:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"352:15:4"},"id":296,"nodeType":"InheritanceSpecifier","src":"352:15:4"}],"canonicalName":"BridgeContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":540,"linearizedBaseContracts":[540,177,112,285],"name":"BridgeContract","nameLocation":"325:14:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"b353aaa7","id":299,"mutability":"immutable","name":"lzEndpoint","nameLocation":"411:10:4","nodeType":"VariableDeclaration","scope":540,"src":"375:46:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$797","typeString":"contract ILayerZeroEndpoint"},"typeName":{"id":298,"nodeType":"UserDefinedTypeName","pathNode":{"id":297,"name":"ILayerZeroEndpoint","nameLocations":["375:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":797,"src":"375:18:4"},"referencedDeclaration":797,"src":"375:18:4","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$797","typeString":"contract ILayerZeroEndpoint"}},"visibility":"public"},{"constant":false,"functionSelector":"461a758c","id":302,"mutability":"immutable","name":"priceConsumer","nameLocation":"459:13:4","nodeType":"VariableDeclaration","scope":540,"src":"428:44:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PriceConsumer_$729","typeString":"contract PriceConsumer"},"typeName":{"id":301,"nodeType":"UserDefinedTypeName","pathNode":{"id":300,"name":"PriceConsumer","nameLocations":["428:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"428:13:4"},"referencedDeclaration":729,"src":"428:13:4","typeDescriptions":{"typeIdentifier":"t_contract$_PriceConsumer_$729","typeString":"contract PriceConsumer"}},"visibility":"public"},{"constant":false,"functionSelector":"7533d788","id":306,"mutability":"mutable","name":"trustedRemoteLookup","nameLocation":"513:19:4","nodeType":"VariableDeclaration","scope":540,"src":"481:51:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes)"},"typeName":{"id":305,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":303,"name":"uint16","nodeType":"ElementaryTypeName","src":"489:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"481:24:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":304,"name":"bytes","nodeType":"ElementaryTypeName","src":"499:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"public"},{"constant":false,"functionSelector":"15b86fab","id":310,"mutability":"mutable","name":"minDstGasLookup","nameLocation":"573:15:4","nodeType":"VariableDeclaration","scope":540,"src":"539:49:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"typeName":{"id":309,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":307,"name":"uint16","nodeType":"ElementaryTypeName","src":"547:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"539:26:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"canonicalName":"BridgeContract.BridgeParams","id":325,"members":[{"constant":false,"id":312,"mutability":"mutable","name":"dstChainId","nameLocation":"635:10:4","nodeType":"VariableDeclaration","scope":325,"src":"628:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":311,"name":"uint16","nodeType":"ElementaryTypeName","src":"628:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"toAddress","nameLocation":"662:9:4","nodeType":"VariableDeclaration","scope":325,"src":"656:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":313,"name":"bytes","nodeType":"ElementaryTypeName","src":"656:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":316,"mutability":"mutable","name":"amount","nameLocation":"690:6:4","nodeType":"VariableDeclaration","scope":325,"src":"682:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"refundAddress","nameLocation":"723:13:4","nodeType":"VariableDeclaration","scope":325,"src":"707:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"707:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"zroPaymentAddress","nameLocation":"755:17:4","nodeType":"VariableDeclaration","scope":325,"src":"747:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"747:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"adapterParams","nameLocation":"789:13:4","nodeType":"VariableDeclaration","scope":325,"src":"783:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":321,"name":"bytes","nodeType":"ElementaryTypeName","src":"783:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"priceProof","nameLocation":"819:10:4","nodeType":"VariableDeclaration","scope":325,"src":"813:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":323,"name":"bytes","nodeType":"ElementaryTypeName","src":"813:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BridgeParams","nameLocation":"604:12:4","nodeType":"StructDefinition","scope":540,"src":"597:240:4","visibility":"public"},{"anonymous":false,"eventSelector":"fddccbc9551702941ca319ef875152663df18c2a77c25b17b88f42ee51ae98bf","id":337,"name":"TokensSent","nameLocation":"851:10:4","nodeType":"EventDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"888:4:4","nodeType":"VariableDeclaration","scope":337,"src":"872:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"dstChainId","nameLocation":"918:10:4","nodeType":"VariableDeclaration","scope":337,"src":"903:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":328,"name":"uint16","nodeType":"ElementaryTypeName","src":"903:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":false,"mutability":"mutable","name":"toAddress","nameLocation":"945:9:4","nodeType":"VariableDeclaration","scope":337,"src":"939:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":330,"name":"bytes","nodeType":"ElementaryTypeName","src":"939:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"973:6:4","nodeType":"VariableDeclaration","scope":337,"src":"965:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"965:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":335,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"998:5:4","nodeType":"VariableDeclaration","scope":337,"src":"990:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"861:149:4"},"src":"845:166:4"},{"anonymous":false,"eventSelector":"7bdfc2ee5f4035d437b8b4a8616e73b0e59beab76d9b6a7d4de6e04867ed5b1a","id":347,"name":"TokensReceived","nameLocation":"1025:14:4","nodeType":"EventDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1066:2:4","nodeType":"VariableDeclaration","scope":347,"src":"1050:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"1050:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"srcChainId","nameLocation":"1094:10:4","nodeType":"VariableDeclaration","scope":347,"src":"1079:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":340,"name":"uint16","nodeType":"ElementaryTypeName","src":"1079:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1123:6:4","nodeType":"VariableDeclaration","scope":347,"src":"1115:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":345,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1148:5:4","nodeType":"VariableDeclaration","scope":347,"src":"1140:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1140:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1039:121:4"},"src":"1019:142:4"},{"body":{"id":368,"nodeType":"Block","src":"1236:119:4","statements":[{"expression":{"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":356,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"1247:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$797","typeString":"contract ILayerZeroEndpoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":358,"name":"_lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1279:11:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":357,"name":"ILayerZeroEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"1260:18:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILayerZeroEndpoint_$797_$","typeString":"type(contract ILayerZeroEndpoint)"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1260:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$797","typeString":"contract ILayerZeroEndpoint"}},"src":"1247:44:4","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$797","typeString":"contract ILayerZeroEndpoint"}},"id":361,"nodeType":"ExpressionStatement","src":"1247:44:4"},{"expression":{"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":362,"name":"priceConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"1302:13:4","typeDescriptions":{"typeIdentifier":"t_contract$_PriceConsumer_$729","typeString":"contract PriceConsumer"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":364,"name":"_priceConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"1332:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":363,"name":"PriceConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"1318:13:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceConsumer_$729_$","typeString":"type(contract PriceConsumer)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1318:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceConsumer_$729","typeString":"contract PriceConsumer"}},"src":"1302:45:4","typeDescriptions":{"typeIdentifier":"t_contract$_PriceConsumer_$729","typeString":"contract PriceConsumer"}},"id":367,"nodeType":"ExpressionStatement","src":"1302:45:4"}]},"id":369,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":354,"kind":"baseConstructorSpecifier","modifierName":{"id":353,"name":"Ownable","nameLocations":["1226:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"1226:7:4"},"nodeType":"ModifierInvocation","src":"1226:9:4"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"_lzEndpoint","nameLocation":"1189:11:4","nodeType":"VariableDeclaration","scope":369,"src":"1181:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"1181:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"_priceConsumer","nameLocation":"1210:14:4","nodeType":"VariableDeclaration","scope":369,"src":"1202:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"1202:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1180:45:4"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[],"src":"1236:0:4"},"scope":540,"src":"1169:186:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":449,"nodeType":"Block","src":"1459:1021:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":378,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"1478:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeParams_$325_calldata_ptr","typeString":"struct BridgeContract.BridgeParams calldata"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1485:6:4","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":316,"src":"1478:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1494:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1478:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420616d6f756e74","id":382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1497:16:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1","typeString":"literal_string \"Invalid amount\""},"value":"Invalid amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1","typeString":"literal_string \"Invalid amount\""}],"id":377,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1470:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1470:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"ExpressionStatement","src":"1470:44:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":386,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"1547:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":389,"indexExpression":{"expression":{"id":387,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"1567:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeParams_$325_calldata_ptr","typeString":"struct BridgeContract.BridgeParams calldata"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1574:10:4","memberName":"dstChainId","nodeType":"MemberAccess","referencedDeclaration":312,"src":"1567:17:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1547:38:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1586:6:4","memberName":"length","nodeType":"MemberAccess","src":"1547:45:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1596:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1547:50:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44657374696e6174696f6e20636861696e206e6f742074727573746564","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1612:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_dedd5745884ff6564286cabc670ecb3f8d2f70923e131ae76027203d651ba9ba","typeString":"literal_string \"Destination chain not trusted\""},"value":"Destination chain not trusted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dedd5745884ff6564286cabc670ecb3f8d2f70923e131ae76027203d651ba9ba","typeString":"literal_string \"Destination chain not trusted\""}],"id":385,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1525:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1525:129:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":395,"nodeType":"ExpressionStatement","src":"1525:129:4"},{"assignments":[397,null,null],"declarations":[{"constant":false,"id":397,"mutability":"mutable","name":"price","nameLocation":"1730:5:4","nodeType":"VariableDeclaration","scope":449,"src":"1722:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1722:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,null],"id":404,"initialValue":{"arguments":[{"expression":{"id":400,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"1793:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeParams_$325_calldata_ptr","typeString":"struct BridgeContract.BridgeParams calldata"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1800:10:4","memberName":"priceProof","nodeType":"MemberAccess","referencedDeclaration":324,"src":"1793:17:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"hexValue":"30","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1825:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":398,"name":"priceConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"1743:13:4","typeDescriptions":{"typeIdentifier":"t_contract$_PriceConsumer_$729","typeString":"contract PriceConsumer"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1757:21:4","memberName":"getPriceDataWithRound","nodeType":"MemberAccess","referencedDeclaration":714,"src":"1743:35:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (bytes memory,uint256) external returns (uint256,uint256,uint256)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1743:94:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"1721:116:4"},{"assignments":[406],"declarations":[{"constant":false,"id":406,"mutability":"mutable","name":"payload","nameLocation":"1863:7:4","nodeType":"VariableDeclaration","scope":449,"src":"1850:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":405,"name":"bytes","nodeType":"ElementaryTypeName","src":"1850:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":415,"initialValue":{"arguments":[{"expression":{"id":409,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"1898:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeParams_$325_calldata_ptr","typeString":"struct BridgeContract.BridgeParams calldata"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1905:9:4","memberName":"toAddress","nodeType":"MemberAccess","referencedDeclaration":314,"src":"1898:16:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":411,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"1929:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeParams_$325_calldata_ptr","typeString":"struct BridgeContract.BridgeParams calldata"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1936:6:4","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":316,"src":"1929:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":413,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1957:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":407,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1873:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1877:6:4","memberName":"encode","nodeType":"MemberAccess","src":"1873:10:4","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:100:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1850:123:4"},{"expression":{"arguments":[{"expression":{"id":422,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2085:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeParams_$325_calldata_ptr","typeString":"struct BridgeContract.BridgeParams calldata"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2092:10:4","memberName":"dstChainId","nodeType":"MemberAccess","referencedDeclaration":312,"src":"2085:17:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"baseExpression":{"id":424,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"2117:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":427,"indexExpression":{"expression":{"id":425,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2137:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeParams_$325_calldata_ptr","typeString":"struct BridgeContract.BridgeParams calldata"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2144:10:4","memberName":"dstChainId","nodeType":"MemberAccess","referencedDeclaration":312,"src":"2137:17:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2117:38:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},{"id":428,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"2170:7:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":429,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2192:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeParams_$325_calldata_ptr","typeString":"struct BridgeContract.BridgeParams calldata"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2199:13:4","memberName":"refundAddress","nodeType":"MemberAccess","referencedDeclaration":318,"src":"2192:20:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"id":431,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2227:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeParams_$325_calldata_ptr","typeString":"struct BridgeContract.BridgeParams calldata"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2234:17:4","memberName":"zroPaymentAddress","nodeType":"MemberAccess","referencedDeclaration":320,"src":"2227:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":433,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2266:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeParams_$325_calldata_ptr","typeString":"struct BridgeContract.BridgeParams calldata"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:13:4","memberName":"adapterParams","nodeType":"MemberAccess","referencedDeclaration":322,"src":"2266:20:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":416,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"2037:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$797","typeString":"contract ILayerZeroEndpoint"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2048:4:4","memberName":"send","nodeType":"MemberAccess","referencedDeclaration":746,"src":"2037:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint16_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,bytes memory,address payable,address,bytes memory) payable external"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":419,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2060:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2064:5:4","memberName":"value","nodeType":"MemberAccess","src":"2060:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2037:33:4","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint16_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$returns$__$value","typeString":"function (uint16,bytes memory,bytes memory,address payable,address,bytes memory) payable external"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2037:260:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"ExpressionStatement","src":"2037:260:4"},{"eventCall":{"arguments":[{"expression":{"id":438,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2340:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2344:6:4","memberName":"sender","nodeType":"MemberAccess","src":"2340:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":440,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2365:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeParams_$325_calldata_ptr","typeString":"struct BridgeContract.BridgeParams calldata"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2372:10:4","memberName":"dstChainId","nodeType":"MemberAccess","referencedDeclaration":312,"src":"2365:17:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":442,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2397:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeParams_$325_calldata_ptr","typeString":"struct BridgeContract.BridgeParams calldata"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2404:9:4","memberName":"toAddress","nodeType":"MemberAccess","referencedDeclaration":314,"src":"2397:16:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":444,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2428:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeParams_$325_calldata_ptr","typeString":"struct BridgeContract.BridgeParams calldata"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2435:6:4","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":316,"src":"2428:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":446,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2456:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":437,"name":"TokensSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"2315:10:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint16_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint16,bytes memory,uint256,uint256)"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2315:157:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":448,"nodeType":"EmitStatement","src":"2310:162:4"}]},"functionSelector":"709890d5","id":450,"implemented":true,"kind":"function","modifiers":[{"id":375,"kind":"modifierInvocation","modifierName":{"id":374,"name":"nonReentrant","nameLocations":["1446:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"1446:12:4"},"nodeType":"ModifierInvocation","src":"1446:12:4"}],"name":"sendTokens","nameLocation":"1372:10:4","nodeType":"FunctionDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"params","nameLocation":"1415:6:4","nodeType":"VariableDeclaration","scope":450,"src":"1393:28:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeParams_$325_calldata_ptr","typeString":"struct BridgeContract.BridgeParams"},"typeName":{"id":371,"nodeType":"UserDefinedTypeName","pathNode":{"id":370,"name":"BridgeParams","nameLocations":["1393:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":325,"src":"1393:12:4"},"referencedDeclaration":325,"src":"1393:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeParams_$325_storage_ptr","typeString":"struct BridgeContract.BridgeParams"}},"visibility":"internal"}],"src":"1382:46:4"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"1459:0:4"},"scope":540,"src":"1363:1117:4","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":486,"nodeType":"Block","src":"2706:290:4","statements":[{"assignments":[466],"declarations":[{"constant":false,"id":466,"mutability":"mutable","name":"payload","nameLocation":"2730:7:4","nodeType":"VariableDeclaration","scope":486,"src":"2717:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":465,"name":"bytes","nodeType":"ElementaryTypeName","src":"2717:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":473,"initialValue":{"arguments":[{"id":469,"name":"_toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"2751:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":470,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"2763:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2772:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":467,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2740:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2744:6:4","memberName":"encode","nodeType":"MemberAccess","src":"2740:10:4","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2717:57:4"},{"expression":{"arguments":[{"id":476,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"2847:11:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"arguments":[{"id":479,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2885:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_BridgeContract_$540","typeString":"contract BridgeContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BridgeContract_$540","typeString":"contract BridgeContract"}],"id":478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"2877:7:4","typeDescriptions":{}}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":481,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"2909:7:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2935:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":483,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"2959:14:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":474,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"2805:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$797","typeString":"contract ILayerZeroEndpoint"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2816:12:4","memberName":"estimateFees","nodeType":"MemberAccess","referencedDeclaration":796,"src":"2805:23:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint16,address,bytes memory,bool,bytes memory) view external returns (uint256,uint256)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2805:183:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":464,"id":485,"nodeType":"Return","src":"2785:203:4"}]},"functionSelector":"39a52ef7","id":487,"implemented":true,"kind":"function","modifiers":[],"name":"estimateFees","nameLocation":"2497:12:4","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"_dstChainId","nameLocation":"2527:11:4","nodeType":"VariableDeclaration","scope":487,"src":"2520:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":451,"name":"uint16","nodeType":"ElementaryTypeName","src":"2520:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"_toAddress","nameLocation":"2564:10:4","nodeType":"VariableDeclaration","scope":487,"src":"2549:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":453,"name":"bytes","nodeType":"ElementaryTypeName","src":"2549:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"_amount","nameLocation":"2593:7:4","nodeType":"VariableDeclaration","scope":487,"src":"2585:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"2585:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"_adapterParams","nameLocation":"2626:14:4","nodeType":"VariableDeclaration","scope":487,"src":"2611:29:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":457,"name":"bytes","nodeType":"ElementaryTypeName","src":"2611:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2509:138:4"},"returnParameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"nativeFee","nameLocation":"2679:9:4","nodeType":"VariableDeclaration","scope":487,"src":"2671:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":460,"name":"uint256","nodeType":"ElementaryTypeName","src":"2671:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"zroFee","nameLocation":"2698:6:4","nodeType":"VariableDeclaration","scope":487,"src":"2690:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"2690:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2670:35:4"},"scope":540,"src":"2488:508:4","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":502,"nodeType":"Block","src":"3119:62:4","statements":[{"expression":{"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":496,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3130:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":498,"indexExpression":{"id":497,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"3150:14:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3130:35:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":499,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"3168:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"src":"3130:43:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":501,"nodeType":"ExpressionStatement","src":"3130:43:4"}]},"functionSelector":"eb8d72b7","id":503,"implemented":true,"kind":"function","modifiers":[{"id":494,"kind":"modifierInvocation","modifierName":{"id":493,"name":"onlyOwner","nameLocations":["3109:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"3109:9:4"},"nodeType":"ModifierInvocation","src":"3109:9:4"}],"name":"setTrustedRemote","nameLocation":"3013:16:4","nodeType":"FunctionDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"_remoteChainId","nameLocation":"3047:14:4","nodeType":"VariableDeclaration","scope":503,"src":"3040:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":488,"name":"uint16","nodeType":"ElementaryTypeName","src":"3040:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"_path","nameLocation":"3087:5:4","nodeType":"VariableDeclaration","scope":503,"src":"3072:20:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":490,"name":"bytes","nodeType":"ElementaryTypeName","src":"3072:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3029:70:4"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[],"src":"3119:0:4"},"scope":540,"src":"3004:177:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":518,"nodeType":"Block","src":"3292:57:4","statements":[{"expression":{"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":512,"name":"minDstGasLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"3303:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":514,"indexExpression":{"id":513,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"3319:11:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3303:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":515,"name":"_minGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"3334:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3303:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":517,"nodeType":"ExpressionStatement","src":"3303:38:4"}]},"functionSelector":"a02c0b98","id":519,"implemented":true,"kind":"function","modifiers":[{"id":510,"kind":"modifierInvocation","modifierName":{"id":509,"name":"onlyOwner","nameLocations":["3282:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"3282:9:4"},"nodeType":"ModifierInvocation","src":"3282:9:4"}],"name":"setMinDstGas","nameLocation":"3198:12:4","nodeType":"FunctionDefinition","parameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"_dstChainId","nameLocation":"3228:11:4","nodeType":"VariableDeclaration","scope":519,"src":"3221:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":504,"name":"uint16","nodeType":"ElementaryTypeName","src":"3221:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":507,"mutability":"mutable","name":"_minGas","nameLocation":"3258:7:4","nodeType":"VariableDeclaration","scope":519,"src":"3250:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"3250:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:62:4"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"3292:0:4"},"scope":540,"src":"3189:160:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":538,"nodeType":"Block","src":"3478:56:4","statements":[{"expression":{"arguments":[{"id":534,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"3513:3:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":535,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3518:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":531,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"3496:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"3489:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$255_$","typeString":"type(contract IERC20)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3489:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3504:8:4","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":222,"src":"3489:23:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3489:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":537,"nodeType":"ExpressionStatement","src":"3489:37:4"}]},"functionSelector":"cea9d26f","id":539,"implemented":true,"kind":"function","modifiers":[{"id":528,"kind":"modifierInvocation","modifierName":{"id":527,"name":"onlyOwner","nameLocations":["3468:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"3468:9:4"},"nodeType":"ModifierInvocation","src":"3468:9:4"}],"name":"rescueTokens","nameLocation":"3366:12:4","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"_token","nameLocation":"3397:6:4","nodeType":"VariableDeclaration","scope":539,"src":"3389:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"3389:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":523,"mutability":"mutable","name":"_to","nameLocation":"3422:3:4","nodeType":"VariableDeclaration","scope":539,"src":"3414:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"3414:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"_amount","nameLocation":"3444:7:4","nodeType":"VariableDeclaration","scope":539,"src":"3436:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":524,"name":"uint256","nodeType":"ElementaryTypeName","src":"3436:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3378:80:4"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"3478:0:4"},"scope":540,"src":"3357:177:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":541,"src":"316:3221:4","usedErrors":[]}],"src":"33:3506:4"},"id":4},"src/contracts/PriceConsumer.sol":{"ast":{"absolutePath":"src/contracts/PriceConsumer.sol","exportedSymbols":{"Context":[285],"ISupraOraclePull":[842],"Ownable":[112],"PriceConsumer":[729]},"id":730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":542,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"33:23:5"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":543,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":730,"sourceUnit":113,"src":"60:52:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/contracts/interfaces/ISupraOraclePull.sol","file":"./interfaces/ISupraOraclePull.sol","id":544,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":730,"sourceUnit":843,"src":"114:43:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":545,"name":"Ownable","nameLocations":["187:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"187:7:5"},"id":546,"nodeType":"InheritanceSpecifier","src":"187:7:5"}],"canonicalName":"PriceConsumer","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":729,"linearizedBaseContracts":[729,112,285],"name":"PriceConsumer","nameLocation":"170:13:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"7dc0d1d0","id":549,"mutability":"mutable","name":"oracle","nameLocation":"226:6:5","nodeType":"VariableDeclaration","scope":729,"src":"202:30:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISupraOraclePull_$842","typeString":"contract ISupraOraclePull"},"typeName":{"id":548,"nodeType":"UserDefinedTypeName","pathNode":{"id":547,"name":"ISupraOraclePull","nameLocations":["202:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"202:16:5"},"referencedDeclaration":842,"src":"202:16:5","typeDescriptions":{"typeIdentifier":"t_contract$_ISupraOraclePull_$842","typeString":"contract ISupraOraclePull"}},"visibility":"public"},{"anonymous":false,"eventSelector":"5396f73806124013c800248a3abdf9e9fffe444d69b665b4edf9c9584c05ffa0","id":559,"name":"PriceReceived","nameLocation":"251:13:5","nodeType":"EventDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"indexed":false,"mutability":"mutable","name":"pair","nameLocation":"273:4:5","nodeType":"VariableDeclaration","scope":559,"src":"265:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"265:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":553,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"287:5:5","nodeType":"VariableDeclaration","scope":559,"src":"279:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"279:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":555,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"302:9:5","nodeType":"VariableDeclaration","scope":559,"src":"294:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"294:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":557,"indexed":false,"mutability":"mutable","name":"round","nameLocation":"321:5:5","nodeType":"VariableDeclaration","scope":559,"src":"313:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":556,"name":"uint256","nodeType":"ElementaryTypeName","src":"313:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"264:63:5"},"src":"245:83:5"},{"body":{"id":572,"nodeType":"Block","src":"385:59:5","statements":[{"expression":{"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":566,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"396:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_ISupraOraclePull_$842","typeString":"contract ISupraOraclePull"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":568,"name":"oracleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"422:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":567,"name":"ISupraOraclePull","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"405:16:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISupraOraclePull_$842_$","typeString":"type(contract ISupraOraclePull)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"405:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISupraOraclePull_$842","typeString":"contract ISupraOraclePull"}},"src":"396:40:5","typeDescriptions":{"typeIdentifier":"t_contract$_ISupraOraclePull_$842","typeString":"contract ISupraOraclePull"}},"id":571,"nodeType":"ExpressionStatement","src":"396:40:5"}]},"id":573,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":564,"kind":"baseConstructorSpecifier","modifierName":{"id":563,"name":"Ownable","nameLocations":["375:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"375:7:5"},"nodeType":"ModifierInvocation","src":"375:9:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"oracleAddress","nameLocation":"360:13:5","nodeType":"VariableDeclaration","scope":573,"src":"352:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"352:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"351:23:5"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[],"src":"385:0:5"},"scope":729,"src":"340:104:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":630,"nodeType":"Block","src":"597:339:5","statements":[{"assignments":[588],"declarations":[{"constant":false,"id":588,"mutability":"mutable","name":"prices","nameLocation":"642:6:5","nodeType":"VariableDeclaration","scope":630,"src":"608:40:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PriceData_$809_memory_ptr","typeString":"struct ISupraOraclePull.PriceData"},"typeName":{"id":587,"nodeType":"UserDefinedTypeName","pathNode":{"id":586,"name":"ISupraOraclePull.PriceData","nameLocations":["608:16:5","625:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":809,"src":"608:26:5"},"referencedDeclaration":809,"src":"608:26:5","typeDescriptions":{"typeIdentifier":"t_struct$_PriceData_$809_storage_ptr","typeString":"struct ISupraOraclePull.PriceData"}},"visibility":"internal"}],"id":593,"initialValue":{"arguments":[{"id":591,"name":"_bytesProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"676:11:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":589,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"651:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_ISupraOraclePull_$842","typeString":"contract ISupraOraclePull"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"658:17:5","memberName":"verifyOracleProof","nodeType":"MemberAccess","referencedDeclaration":833,"src":"651:24:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_struct$_PriceData_$809_memory_ptr_$","typeString":"function (bytes memory) external returns (struct ISupraOraclePull.PriceData memory)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"651:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PriceData_$809_memory_ptr","typeString":"struct ISupraOraclePull.PriceData memory"}},"nodeType":"VariableDeclarationStatement","src":"608:80:5"},{"body":{"id":624,"nodeType":"Block","src":"759:135:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":606,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"778:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PriceData_$809_memory_ptr","typeString":"struct ISupraOraclePull.PriceData memory"}},"id":607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"785:5:5","memberName":"pairs","nodeType":"MemberAccess","referencedDeclaration":802,"src":"778:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":609,"indexExpression":{"id":608,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"791:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"778:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":610,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"797:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"778:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":623,"nodeType":"IfStatement","src":"774:109:5","trueBody":{"id":622,"nodeType":"Block","src":"803:80:5","statements":[{"expression":{"components":[{"baseExpression":{"expression":{"id":612,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"830:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PriceData_$809_memory_ptr","typeString":"struct ISupraOraclePull.PriceData memory"}},"id":613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"837:6:5","memberName":"prices","nodeType":"MemberAccess","referencedDeclaration":805,"src":"830:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":615,"indexExpression":{"id":614,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"844:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"830:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"expression":{"id":616,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"848:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PriceData_$809_memory_ptr","typeString":"struct ISupraOraclePull.PriceData memory"}},"id":617,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"855:8:5","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":808,"src":"848:15:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":619,"indexExpression":{"id":618,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"864:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"848:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"829:38:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":583,"id":621,"nodeType":"Return","src":"822:45:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":598,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"729:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":599,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"733:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PriceData_$809_memory_ptr","typeString":"struct ISupraOraclePull.PriceData memory"}},"id":600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"740:5:5","memberName":"pairs","nodeType":"MemberAccess","referencedDeclaration":802,"src":"733:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"746:6:5","memberName":"length","nodeType":"MemberAccess","src":"733:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"729:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":625,"initializationExpression":{"assignments":[595],"declarations":[{"constant":false,"id":595,"mutability":"mutable","name":"i","nameLocation":"722:1:5","nodeType":"VariableDeclaration","scope":625,"src":"714:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"714:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":597,"initialValue":{"hexValue":"30","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"726:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"714:13:5"},"loopExpression":{"expression":{"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"754:3:5","subExpression":{"id":603,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"754:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":605,"nodeType":"ExpressionStatement","src":"754:3:5"},"nodeType":"ForStatement","src":"709:185:5"},{"expression":{"arguments":[{"hexValue":"50616972206e6f7420666f756e64","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"911:16:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7cc7a25eadf7a2176eecc62c0abf21029ad5a11d3716b3e2930e1fc409989988","typeString":"literal_string \"Pair not found\""},"value":"Pair not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7cc7a25eadf7a2176eecc62c0abf21029ad5a11d3716b3e2930e1fc409989988","typeString":"literal_string \"Pair not found\""}],"id":626,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"904:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"904:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"ExpressionStatement","src":"904:24:5"}]},"functionSelector":"9807d25d","id":631,"implemented":true,"kind":"function","modifiers":[],"name":"getPriceData","nameLocation":"465:12:5","nodeType":"FunctionDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"_bytesProof","nameLocation":"493:11:5","nodeType":"VariableDeclaration","scope":631,"src":"478:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":574,"name":"bytes","nodeType":"ElementaryTypeName","src":"478:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"pair","nameLocation":"514:4:5","nodeType":"VariableDeclaration","scope":631,"src":"506:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":576,"name":"uint256","nodeType":"ElementaryTypeName","src":"506:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"477:42:5"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"price","nameLocation":"566:5:5","nodeType":"VariableDeclaration","scope":631,"src":"558:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":579,"name":"uint256","nodeType":"ElementaryTypeName","src":"558:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"decimals","nameLocation":"581:8:5","nodeType":"VariableDeclaration","scope":631,"src":"573:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":581,"name":"uint256","nodeType":"ElementaryTypeName","src":"573:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"557:33:5"},"scope":729,"src":"456:480:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":713,"nodeType":"Block","src":"1114:531:5","statements":[{"assignments":[648],"declarations":[{"constant":false,"id":648,"mutability":"mutable","name":"prices","nameLocation":"1159:6:5","nodeType":"VariableDeclaration","scope":713,"src":"1125:40:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PriceInfo_$825_memory_ptr","typeString":"struct ISupraOraclePull.PriceInfo"},"typeName":{"id":647,"nodeType":"UserDefinedTypeName","pathNode":{"id":646,"name":"ISupraOraclePull.PriceInfo","nameLocations":["1125:16:5","1142:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":825,"src":"1125:26:5"},"referencedDeclaration":825,"src":"1125:26:5","typeDescriptions":{"typeIdentifier":"t_struct$_PriceInfo_$825_storage_ptr","typeString":"struct ISupraOraclePull.PriceInfo"}},"visibility":"internal"}],"id":653,"initialValue":{"arguments":[{"id":651,"name":"_bytesProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"1195:11:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":649,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"1168:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_ISupraOraclePull_$842","typeString":"contract ISupraOraclePull"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1175:19:5","memberName":"verifyOracleProofV2","nodeType":"MemberAccess","referencedDeclaration":841,"src":"1168:26:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_struct$_PriceInfo_$825_memory_ptr_$","typeString":"function (bytes memory) external returns (struct ISupraOraclePull.PriceInfo memory)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1168:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PriceInfo_$825_memory_ptr","typeString":"struct ISupraOraclePull.PriceInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"1125:82:5"},{"body":{"id":707,"nodeType":"Block","src":"1278:325:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":666,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"1297:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PriceInfo_$825_memory_ptr","typeString":"struct ISupraOraclePull.PriceInfo memory"}},"id":667,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1304:5:5","memberName":"pairs","nodeType":"MemberAccess","referencedDeclaration":812,"src":"1297:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":669,"indexExpression":{"id":668,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"1310:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1297:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":670,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"1316:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1297:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":706,"nodeType":"IfStatement","src":"1293:299:5","trueBody":{"id":705,"nodeType":"Block","src":"1322:270:5","statements":[{"expression":{"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":672,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"1341:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":673,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"1349:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PriceInfo_$825_memory_ptr","typeString":"struct ISupraOraclePull.PriceInfo memory"}},"id":674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1356:6:5","memberName":"prices","nodeType":"MemberAccess","referencedDeclaration":815,"src":"1349:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":676,"indexExpression":{"id":675,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"1363:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1349:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1341:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":678,"nodeType":"ExpressionStatement","src":"1341:24:5"},{"expression":{"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":679,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"1384:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":680,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"1396:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PriceInfo_$825_memory_ptr","typeString":"struct ISupraOraclePull.PriceInfo memory"}},"id":681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1403:9:5","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":818,"src":"1396:16:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":683,"indexExpression":{"id":682,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"1413:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1396:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1384:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":685,"nodeType":"ExpressionStatement","src":"1384:31:5"},{"expression":{"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":686,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"1434:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":687,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"1442:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PriceInfo_$825_memory_ptr","typeString":"struct ISupraOraclePull.PriceInfo memory"}},"id":688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1449:5:5","memberName":"round","nodeType":"MemberAccess","referencedDeclaration":824,"src":"1442:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":690,"indexExpression":{"id":689,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"1455:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1442:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1434:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":692,"nodeType":"ExpressionStatement","src":"1434:23:5"},{"eventCall":{"arguments":[{"id":694,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"1495:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":695,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"1501:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":696,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"1508:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":697,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"1519:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":693,"name":"PriceReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"1481:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1481:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":699,"nodeType":"EmitStatement","src":"1476:49:5"},{"expression":{"components":[{"id":700,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"1552:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":701,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"1559:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":702,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"1570:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":703,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1551:25:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"functionReturnParameters":643,"id":704,"nodeType":"Return","src":"1544:32:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":658,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"1248:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":659,"name":"prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"1252:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_PriceInfo_$825_memory_ptr","typeString":"struct ISupraOraclePull.PriceInfo memory"}},"id":660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1259:5:5","memberName":"pairs","nodeType":"MemberAccess","referencedDeclaration":812,"src":"1252:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1265:6:5","memberName":"length","nodeType":"MemberAccess","src":"1252:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1248:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":708,"initializationExpression":{"assignments":[655],"declarations":[{"constant":false,"id":655,"mutability":"mutable","name":"i","nameLocation":"1241:1:5","nodeType":"VariableDeclaration","scope":708,"src":"1233:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":657,"initialValue":{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1245:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1233:13:5"},"loopExpression":{"expression":{"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1273:3:5","subExpression":{"id":663,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"1273:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":665,"nodeType":"ExpressionStatement","src":"1273:3:5"},"nodeType":"ForStatement","src":"1228:375:5"},{"expression":{"arguments":[{"hexValue":"50616972206e6f7420666f756e64","id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1620:16:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7cc7a25eadf7a2176eecc62c0abf21029ad5a11d3716b3e2930e1fc409989988","typeString":"literal_string \"Pair not found\""},"value":"Pair not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7cc7a25eadf7a2176eecc62c0abf21029ad5a11d3716b3e2930e1fc409989988","typeString":"literal_string \"Pair not found\""}],"id":709,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1613:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1613:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":712,"nodeType":"ExpressionStatement","src":"1613:24:5"}]},"functionSelector":"a46d47ce","id":714,"implemented":true,"kind":"function","modifiers":[],"name":"getPriceDataWithRound","nameLocation":"957:21:5","nodeType":"FunctionDefinition","parameters":{"id":636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"_bytesProof","nameLocation":"994:11:5","nodeType":"VariableDeclaration","scope":714,"src":"979:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":632,"name":"bytes","nodeType":"ElementaryTypeName","src":"979:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":635,"mutability":"mutable","name":"pair","nameLocation":"1015:4:5","nodeType":"VariableDeclaration","scope":714,"src":"1007:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":634,"name":"uint256","nodeType":"ElementaryTypeName","src":"1007:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"978:42:5"},"returnParameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"price","nameLocation":"1067:5:5","nodeType":"VariableDeclaration","scope":714,"src":"1059:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":637,"name":"uint256","nodeType":"ElementaryTypeName","src":"1059:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"timestamp","nameLocation":"1082:9:5","nodeType":"VariableDeclaration","scope":714,"src":"1074:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1074:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"round","nameLocation":"1101:5:5","nodeType":"VariableDeclaration","scope":714,"src":"1093:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1058:49:5"},"scope":729,"src":"948:697:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":727,"nodeType":"Block","src":"1731:62:5","statements":[{"expression":{"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":721,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"1742:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_ISupraOraclePull_$842","typeString":"contract ISupraOraclePull"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":723,"name":"newOracleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"1768:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":722,"name":"ISupraOraclePull","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"1751:16:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISupraOraclePull_$842_$","typeString":"type(contract ISupraOraclePull)"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1751:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISupraOraclePull_$842","typeString":"contract ISupraOraclePull"}},"src":"1742:43:5","typeDescriptions":{"typeIdentifier":"t_contract$_ISupraOraclePull_$842","typeString":"contract ISupraOraclePull"}},"id":726,"nodeType":"ExpressionStatement","src":"1742:43:5"}]},"functionSelector":"f7023bb6","id":728,"implemented":true,"kind":"function","modifiers":[{"id":719,"kind":"modifierInvocation","modifierName":{"id":718,"name":"onlyOwner","nameLocations":["1721:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1721:9:5"},"nodeType":"ModifierInvocation","src":"1721:9:5"}],"name":"updateOracleAddress","nameLocation":"1666:19:5","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"newOracleAddress","nameLocation":"1694:16:5","nodeType":"VariableDeclaration","scope":728,"src":"1686:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1685:26:5"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"1731:0:5"},"scope":729,"src":"1657:136:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":730,"src":"161:1635:5","usedErrors":[]}],"src":"33:1763:5"},"id":5},"src/contracts/interfaces/ILayerZeroEndpoint.sol":{"ast":{"absolutePath":"src/contracts/interfaces/ILayerZeroEndpoint.sol","exportedSymbols":{"ILayerZeroEndpoint":[797]},"id":798,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":731,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"33:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"ILayerZeroEndpoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":797,"linearizedBaseContracts":[797],"name":"ILayerZeroEndpoint","nameLocation":"71:18:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"c5803100","id":746,"implemented":false,"kind":"function","modifiers":[],"name":"send","nameLocation":"807:4:6","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"_dstChainId","nameLocation":"829:11:6","nodeType":"VariableDeclaration","scope":746,"src":"822:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":732,"name":"uint16","nodeType":"ElementaryTypeName","src":"822:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":735,"mutability":"mutable","name":"_destination","nameLocation":"866:12:6","nodeType":"VariableDeclaration","scope":746,"src":"851:27:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":734,"name":"bytes","nodeType":"ElementaryTypeName","src":"851:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"_payload","nameLocation":"904:8:6","nodeType":"VariableDeclaration","scope":746,"src":"889:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":736,"name":"bytes","nodeType":"ElementaryTypeName","src":"889:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"_refundAddress","nameLocation":"939:14:6","nodeType":"VariableDeclaration","scope":746,"src":"923:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"923:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"_zroPaymentAddress","nameLocation":"972:18:6","nodeType":"VariableDeclaration","scope":746,"src":"964:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"964:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"_adapterParams","nameLocation":"1016:14:6","nodeType":"VariableDeclaration","scope":746,"src":"1001:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":742,"name":"bytes","nodeType":"ElementaryTypeName","src":"1001:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"811:226:6"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[],"src":"1054:0:6"},"scope":797,"src":"798:257:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"c2fa4813","id":761,"implemented":false,"kind":"function","modifiers":[],"name":"receivePayload","nameLocation":"1547:14:6","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":748,"mutability":"mutable","name":"_srcChainId","nameLocation":"1579:11:6","nodeType":"VariableDeclaration","scope":761,"src":"1572:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":747,"name":"uint16","nodeType":"ElementaryTypeName","src":"1572:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":750,"mutability":"mutable","name":"_srcAddress","nameLocation":"1616:11:6","nodeType":"VariableDeclaration","scope":761,"src":"1601:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":749,"name":"bytes","nodeType":"ElementaryTypeName","src":"1601:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":752,"mutability":"mutable","name":"_dstAddress","nameLocation":"1646:11:6","nodeType":"VariableDeclaration","scope":761,"src":"1638:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"1638:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"_nonce","nameLocation":"1675:6:6","nodeType":"VariableDeclaration","scope":761,"src":"1668:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":753,"name":"uint64","nodeType":"ElementaryTypeName","src":"1668:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":756,"mutability":"mutable","name":"_gasLimit","nameLocation":"1697:9:6","nodeType":"VariableDeclaration","scope":761,"src":"1692:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":755,"name":"uint","nodeType":"ElementaryTypeName","src":"1692:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"_payload","nameLocation":"1732:8:6","nodeType":"VariableDeclaration","scope":761,"src":"1717:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":757,"name":"bytes","nodeType":"ElementaryTypeName","src":"1717:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1561:186:6"},"returnParameters":{"id":760,"nodeType":"ParameterList","parameters":[],"src":"1756:0:6"},"scope":797,"src":"1538:219:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fdc07c70","id":770,"implemented":false,"kind":"function","modifiers":[],"name":"getInboundNonce","nameLocation":"1965:15:6","nodeType":"FunctionDefinition","parameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"_srcChainId","nameLocation":"1998:11:6","nodeType":"VariableDeclaration","scope":770,"src":"1991:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":762,"name":"uint16","nodeType":"ElementaryTypeName","src":"1991:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":765,"mutability":"mutable","name":"_srcAddress","nameLocation":"2035:11:6","nodeType":"VariableDeclaration","scope":770,"src":"2020:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":764,"name":"bytes","nodeType":"ElementaryTypeName","src":"2020:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1980:73:6"},"returnParameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":770,"src":"2077:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":767,"name":"uint64","nodeType":"ElementaryTypeName","src":"2077:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2076:8:6"},"scope":797,"src":"1956:129:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7a145748","id":779,"implemented":false,"kind":"function","modifiers":[],"name":"getOutboundNonce","nameLocation":"2311:16:6","nodeType":"FunctionDefinition","parameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"_dstChainId","nameLocation":"2345:11:6","nodeType":"VariableDeclaration","scope":779,"src":"2338:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":771,"name":"uint16","nodeType":"ElementaryTypeName","src":"2338:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":774,"mutability":"mutable","name":"_srcAddress","nameLocation":"2375:11:6","nodeType":"VariableDeclaration","scope":779,"src":"2367:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"2367:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2327:66:6"},"returnParameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":779,"src":"2417:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":776,"name":"uint64","nodeType":"ElementaryTypeName","src":"2417:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2416:8:6"},"scope":797,"src":"2302:123:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"40a7bb10","id":796,"implemented":false,"kind":"function","modifiers":[],"name":"estimateFees","nameLocation":"2952:12:6","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"_dstChainId","nameLocation":"2982:11:6","nodeType":"VariableDeclaration","scope":796,"src":"2975:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":780,"name":"uint16","nodeType":"ElementaryTypeName","src":"2975:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":783,"mutability":"mutable","name":"_userApplication","nameLocation":"3012:16:6","nodeType":"VariableDeclaration","scope":796,"src":"3004:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"_payload","nameLocation":"3054:8:6","nodeType":"VariableDeclaration","scope":796,"src":"3039:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":784,"name":"bytes","nodeType":"ElementaryTypeName","src":"3039:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"_payInZRO","nameLocation":"3078:9:6","nodeType":"VariableDeclaration","scope":796,"src":"3073:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":786,"name":"bool","nodeType":"ElementaryTypeName","src":"3073:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"_adapterParam","nameLocation":"3113:13:6","nodeType":"VariableDeclaration","scope":796,"src":"3098:28:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":788,"name":"bytes","nodeType":"ElementaryTypeName","src":"3098:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2964:169:6"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"nativeFee","nameLocation":"3162:9:6","nodeType":"VariableDeclaration","scope":796,"src":"3157:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":791,"name":"uint","nodeType":"ElementaryTypeName","src":"3157:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"zroFee","nameLocation":"3178:6:6","nodeType":"VariableDeclaration","scope":796,"src":"3173:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint","nodeType":"ElementaryTypeName","src":"3173:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3156:29:6"},"scope":797,"src":"2943:243:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":798,"src":"61:3128:6","usedErrors":[]}],"src":"33:3158:6"},"id":6},"src/contracts/interfaces/ISupraOraclePull.sol":{"ast":{"absolutePath":"src/contracts/interfaces/ISupraOraclePull.sol","exportedSymbols":{"ISupraOraclePull":[842]},"id":843,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":799,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"33:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"ISupraOraclePull","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":842,"linearizedBaseContracts":[842],"name":"ISupraOraclePull","nameLocation":"70:16:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISupraOraclePull.PriceData","id":809,"members":[{"constant":false,"id":802,"mutability":"mutable","name":"pairs","nameLocation":"132:5:7","nodeType":"VariableDeclaration","scope":809,"src":"122:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":800,"name":"uint256","nodeType":"ElementaryTypeName","src":"122:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":801,"nodeType":"ArrayTypeName","src":"122:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":805,"mutability":"mutable","name":"prices","nameLocation":"158:6:7","nodeType":"VariableDeclaration","scope":809,"src":"148:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"148:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":804,"nodeType":"ArrayTypeName","src":"148:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"decimals","nameLocation":"185:8:7","nodeType":"VariableDeclaration","scope":809,"src":"175:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":806,"name":"uint256","nodeType":"ElementaryTypeName","src":"175:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":807,"nodeType":"ArrayTypeName","src":"175:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"PriceData","nameLocation":"101:9:7","nodeType":"StructDefinition","scope":842,"src":"94:107:7","visibility":"public"},{"canonicalName":"ISupraOraclePull.PriceInfo","id":825,"members":[{"constant":false,"id":812,"mutability":"mutable","name":"pairs","nameLocation":"247:5:7","nodeType":"VariableDeclaration","scope":825,"src":"237:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"237:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":811,"nodeType":"ArrayTypeName","src":"237:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":815,"mutability":"mutable","name":"prices","nameLocation":"273:6:7","nodeType":"VariableDeclaration","scope":825,"src":"263:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"263:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":814,"nodeType":"ArrayTypeName","src":"263:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"timestamp","nameLocation":"300:9:7","nodeType":"VariableDeclaration","scope":825,"src":"290:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"290:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":817,"nodeType":"ArrayTypeName","src":"290:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":821,"mutability":"mutable","name":"decimal","nameLocation":"330:7:7","nodeType":"VariableDeclaration","scope":825,"src":"320:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"320:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":820,"nodeType":"ArrayTypeName","src":"320:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"round","nameLocation":"358:5:7","nodeType":"VariableDeclaration","scope":825,"src":"348:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":822,"name":"uint256","nodeType":"ElementaryTypeName","src":"348:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":823,"nodeType":"ArrayTypeName","src":"348:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"PriceInfo","nameLocation":"216:9:7","nodeType":"StructDefinition","scope":842,"src":"209:162:7","visibility":"public"},{"functionSelector":"b3a076f4","id":833,"implemented":false,"kind":"function","modifiers":[],"name":"verifyOracleProof","nameLocation":"388:17:7","nodeType":"FunctionDefinition","parameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"mutability":"mutable","name":"_bytesproof","nameLocation":"421:11:7","nodeType":"VariableDeclaration","scope":833,"src":"406:26:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":826,"name":"bytes","nodeType":"ElementaryTypeName","src":"406:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"405:28:7"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":833,"src":"472:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PriceData_$809_memory_ptr","typeString":"struct ISupraOraclePull.PriceData"},"typeName":{"id":830,"nodeType":"UserDefinedTypeName","pathNode":{"id":829,"name":"PriceData","nameLocations":["472:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":809,"src":"472:9:7"},"referencedDeclaration":809,"src":"472:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_PriceData_$809_storage_ptr","typeString":"struct ISupraOraclePull.PriceData"}},"visibility":"internal"}],"src":"471:18:7"},"scope":842,"src":"379:111:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3dcd9793","id":841,"implemented":false,"kind":"function","modifiers":[],"name":"verifyOracleProofV2","nameLocation":"507:19:7","nodeType":"FunctionDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"_bytesProof","nameLocation":"542:11:7","nodeType":"VariableDeclaration","scope":841,"src":"527:26:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":834,"name":"bytes","nodeType":"ElementaryTypeName","src":"527:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"526:28:7"},"returnParameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":841,"src":"597:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PriceInfo_$825_memory_ptr","typeString":"struct ISupraOraclePull.PriceInfo"},"typeName":{"id":838,"nodeType":"UserDefinedTypeName","pathNode":{"id":837,"name":"PriceInfo","nameLocations":["597:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":825,"src":"597:9:7"},"referencedDeclaration":825,"src":"597:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_PriceInfo_$825_storage_ptr","typeString":"struct ISupraOraclePull.PriceInfo"}},"visibility":"internal"}],"src":"596:18:7"},"scope":842,"src":"498:117:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":843,"src":"60:558:7","usedErrors":[]}],"src":"33:585:7"},"id":7}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":123,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/contracts/BridgeContract.sol":{"BridgeContract":{"abi":[{"inputs":[{"internalType":"address","name":"_lzEndpoint","type":"address"},{"internalType":"address","name":"_priceConsumer","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint16","name":"srcChainId","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"TokensReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint16","name":"dstChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"toAddress","type":"bytes"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"TokensSent","type":"event"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"bytes","name":"_toAddress","type":"bytes"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"estimateFees","outputs":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"zroFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lzEndpoint","outputs":[{"internalType":"contract ILayerZeroEndpoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"minDstGasLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceConsumer","outputs":[{"internalType":"contract PriceConsumer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"rescueTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint16","name":"dstChainId","type":"uint16"},{"internalType":"bytes","name":"toAddress","type":"bytes"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address payable","name":"refundAddress","type":"address"},{"internalType":"address","name":"zroPaymentAddress","type":"address"},{"internalType":"bytes","name":"adapterParams","type":"bytes"},{"internalType":"bytes","name":"priceProof","type":"bytes"}],"internalType":"struct BridgeContract.BridgeParams","name":"params","type":"tuple"}],"name":"sendTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_minGas","type":"uint256"}],"name":"setMinDstGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"setTrustedRemote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"trustedRemoteLookup","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":257,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60c0346100e657601f610f4c38819003918201601f19168301916001600160401b038311848410176100eb5780849260409485528339810103126100e657610052602061004b83610101565b9201610101565b60008054336001600160a01b0319821681178355604051946001600160a01b03949385939192918416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360018055166080521660a052610e36908161011682396080518181816103ac01528181610722015281816107f10152610b64015260a0518181816106320152610a4f0152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100e65756fe608080604052600436101561001357600080fd5b600090813560e01c90816315b86fab14610bea5750806339a52ef714610a7e578063461a758c14610a39578063709890d514610575578063715018a61461051b5780637533d7881461043a5780638da5cb5b14610413578063a02c0b98146103db578063b353aaa714610396578063cea9d26f146102df578063eb8d72b7146101725763f2fde38b146100a557600080fd5b3461016f57602036600319011261016f576100be610d0b565b6100c6610d21565b6001600160a01b0390811690811561011b57600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b80fd5b503461016f57604036600319011261016f5761018c610c1a565b9067ffffffffffffffff6024358181116102db576101b161ffff913690600401610c2b565b9190946101bc610d21565b16835260209360028552604084209282116102c7576101db8354610c59565b601f8111610284575b508394601f8311600114610221575093839482939492610216575b50508160011b916000199060031b1c191617905580f35b0135905038806101ff565b90601f198316958486528286209286905b88821061026c57505083600195969710610252575b505050811b01905580f35b0135600019600384901b60f8161c19169055388080610247565b80600184968294958701358155019501920190610232565b838552858520601f840160051c8101918785106102bd575b601f0160051c01905b8181106102b257506101e4565b8581556001016102a5565b909150819061029c565b634e487b7160e01b84526041600452602484fd5b8280fd5b503461016f57606036600319011261016f576102f9610d0b565b6001600160a01b0390602435828116919082900361039157604460209261031e610d21565b85604051958694859363a9059cbb60e01b8552600485015284356024850152165af180156103865761034e575080f35b6020813d821161037e575b8161036660209383610c93565b8101031261037a57518015150361016f5780f35b5080fd5b3d9150610359565b6040513d84823e3d90fd5b600080fd5b503461016f578060031936011261016f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461016f57604036600319011261016f5761ffff6103f8610c1a565b610400610d21565b1681526003602052602435604082205580f35b503461016f578060031936011261016f57546040516001600160a01b039091168152602090f35b503461016f5760208060031936011261037a5761ffff610458610c1a565b16825260028152604082206040518381949083549061047682610c59565b948585526001928784821691826000146104f75750506001146104bb575b5050506104a392500383610c93565b6104b7604051928284938452830190610ccb565b0390f35b869350819291528282205b8583106104df5750506104a39350820101388080610494565b805483890185015287945086939092019181016104c6565b9350945050506104a394915060ff191682840152151560051b820101388080610494565b503461016f578060031936011261016f57610534610d21565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50602036600319011261016f5767ffffffffffffffff6004351161016f5760e06004353603600319011261016f576002600154146109f457600260015560446004350135156109be5761ffff6105cf600435600401610d79565b16815260026020526105e46040822054610c59565b156109795761062690606061060360c460043501600435600401610d88565b6040519485928392635236a3e760e11b8452604060048501526044840191610dbb565b602482018590520381847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af191821561096c578192610939575b506106ae610682602460043501600435600401610d88565b6106a085604094939451948593604460043501359160208601610ddc565b03601f198101835282610c93565b6106bc600435600401610d79565b9061ffff6106ce600435600401610d79565b16835260026020526040832060043560640135916001600160a01b038316830361093557600435608401356001600160a01b03811681036109315761071d60a460043501600435600401610d88565b9390927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b1561092d57918795939161ffff97959360405198899762c5803160e81b895216600488015260c06024880152879180549061078582610c59565b918260c48b0152896001821691826000146109055750506001146108c2575b5050916107c4879694926107ec96946003198983030160448a0152610ccb565b6001600160a01b039485166064880152931660848601528483036003190160a4860152610dbb565b0381347f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1801561038657610896575b509061088c7ffddccbc9551702941ca319ef875152663df18c2a77c25b17b88f42ee51ae98bf61ffff61085d600435600401610d79565b610871602460043501600435600401610d88565b94909560405193849316963396604460043501359185610ddc565b0390a36001805580f35b67ffffffffffffffff81116108ae5760405238610826565b634e487b7160e01b82526041600452602482fd5b89526020892091925088915b8183106108e8575050860160e401906107c46107ec6107a4565b805460e4848d0101528b99508a98506020909201916001016108ce565b60ff191660e48083019190915293151560051b0190920193506107c491506107ec90506107a4565b8780fd5b8580fd5b8480fd5b9091506060813d8211610964575b8161095460609383610c93565b8101031261037a5751903861066a565b3d9150610947565b50604051903d90823e3d90fd5b60405162461bcd60e51b815260206004820152601d60248201527f44657374696e6174696f6e20636861696e206e6f7420747275737465640000006044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b503461016f578060031936011261016f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461016f5760031960803682011261037a57610a99610c1a565b9067ffffffffffffffff60243581811161093557610abb903690600401610c2b565b60649491943592831161093157604093610b1a610b6092610ae361ffff963690600401610c2b565b929091610aff89519a8b92606060208501526080840191610dbb565b6044358a8301528b606083015203601f1981018a5289610c93565b610b4b8751988997889763040a7bb160e41b895216600488015230602488015260a0604488015260a4870190610ccb565b92896064870152858403016084860152610dbb565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa80156103865782918391610bad575b6040838382519182526020820152f35b9150506040813d604011610be2575b81610bc960409383610c93565b8101031261037a57604091506020815191015138610b9d565b3d9150610bbc565b90503461037a57602036600319011261037a57604060209261ffff610c0d610c1a565b1681526003845220548152f35b6004359061ffff8216820361039157565b9181601f840112156103915782359167ffffffffffffffff8311610391576020838186019501011161039157565b90600182811c92168015610c89575b6020831014610c7357565b634e487b7160e01b600052602260045260246000fd5b91607f1691610c68565b90601f8019910116810190811067ffffffffffffffff821117610cb557604052565b634e487b7160e01b600052604160045260246000fd5b919082519283825260005b848110610cf7575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610cd6565b600435906001600160a01b038216820361039157565b6000546001600160a01b03163303610d3557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b3561ffff811681036103915790565b903590601e1981360301821215610391570180359067ffffffffffffffff82116103915760200191813603831361039157565b908060209392818452848401376000828201840152601f01601f1916010190565b90610df69060409396959496606084526060840191610dbb565b946020820152015256fea26469706673582212206745ca71bb46d43c8401dd7aeb95918b8ed41331c6dbdf1dae930c77ebe21e5964736f6c63430008130033","opcodes":"PUSH1 0xC0 CALLVALUE PUSH2 0xE6 JUMPI PUSH1 0x1F PUSH2 0xF4C CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xEB JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xE6 JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0x101 JUMP JUMPDEST SWAP3 ADD PUSH2 0x101 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP4 DUP6 SWAP4 SWAP2 SWAP3 SWAP2 DUP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE PUSH2 0xE36 SWAP1 DUP2 PUSH2 0x116 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x3AC ADD MSTORE DUP2 DUP2 PUSH2 0x722 ADD MSTORE DUP2 DUP2 PUSH2 0x7F1 ADD MSTORE PUSH2 0xB64 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x632 ADD MSTORE PUSH2 0xA4F ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE6 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x15B86FAB EQ PUSH2 0xBEA JUMPI POP DUP1 PUSH4 0x39A52EF7 EQ PUSH2 0xA7E JUMPI DUP1 PUSH4 0x461A758C EQ PUSH2 0xA39 JUMPI DUP1 PUSH4 0x709890D5 EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x7533D788 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xA02C0B98 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xB353AAA7 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xCEA9D26F EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xEB8D72B7 EQ PUSH2 0x172 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16F JUMPI PUSH2 0xBE PUSH2 0xD0B JUMP JUMPDEST PUSH2 0xC6 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16F JUMPI PUSH2 0x18C PUSH2 0xC1A JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2DB JUMPI PUSH2 0x1B1 PUSH2 0xFFFF SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC2B JUMP JUMPDEST SWAP2 SWAP1 SWAP5 PUSH2 0x1BC PUSH2 0xD21 JUMP JUMPDEST AND DUP4 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x2 DUP6 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP3 DUP3 GT PUSH2 0x2C7 JUMPI PUSH2 0x1DB DUP4 SLOAD PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x284 JUMPI JUMPDEST POP DUP4 SWAP5 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x221 JUMPI POP SWAP4 DUP4 SWAP5 DUP3 SWAP4 SWAP5 SWAP3 PUSH2 0x216 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD CALLDATALOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1FF JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP3 DUP7 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x26C JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x252 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP5 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x247 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP5 SWAP7 DUP3 SWAP5 SWAP6 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD SWAP1 PUSH2 0x232 JUMP JUMPDEST DUP4 DUP6 MSTORE DUP6 DUP6 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP8 DUP6 LT PUSH2 0x2BD JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2B2 JUMPI POP PUSH2 0x1E4 JUMP JUMPDEST DUP6 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2A5 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x29C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16F JUMPI PUSH2 0x2F9 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x391 JUMPI PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH2 0x31E PUSH2 0xD21 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE DUP5 CALLDATALOAD PUSH1 0x24 DUP6 ADD MSTORE AND GAS CALL DUP1 ISZERO PUSH2 0x386 JUMPI PUSH2 0x34E JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x37E JUMPI JUMPDEST DUP2 PUSH2 0x366 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xC93 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x37A JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x16F JUMPI DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x16F JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16F JUMPI PUSH2 0xFFFF PUSH2 0x3F8 PUSH2 0xC1A JUMP JUMPDEST PUSH2 0x400 PUSH2 0xD21 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x40 DUP3 KECCAK256 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x16F JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37A JUMPI PUSH2 0xFFFF PUSH2 0x458 PUSH2 0xC1A JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x40 MLOAD DUP4 DUP2 SWAP5 SWAP1 DUP4 SLOAD SWAP1 PUSH2 0x476 DUP3 PUSH2 0xC59 JUMP JUMPDEST SWAP5 DUP6 DUP6 MSTORE PUSH1 0x1 SWAP3 DUP8 DUP5 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x4F7 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x4BB JUMPI JUMPDEST POP POP POP PUSH2 0x4A3 SWAP3 POP SUB DUP4 PUSH2 0xC93 JUMP JUMPDEST PUSH2 0x4B7 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0xCCB JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP7 SWAP4 POP DUP2 SWAP3 SWAP2 MSTORE DUP3 DUP3 KECCAK256 JUMPDEST DUP6 DUP4 LT PUSH2 0x4DF JUMPI POP POP PUSH2 0x4A3 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x494 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x4C6 JUMP JUMPDEST SWAP4 POP SWAP5 POP POP POP PUSH2 0x4A3 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x494 JUMP JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x16F JUMPI PUSH2 0x534 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16F JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD GT PUSH2 0x16F JUMPI PUSH1 0xE0 PUSH1 0x4 CALLDATALOAD CALLDATASIZE SUB PUSH1 0x3 NOT ADD SLT PUSH2 0x16F JUMPI PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x9F4 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x44 PUSH1 0x4 CALLDATALOAD ADD CALLDATALOAD ISZERO PUSH2 0x9BE JUMPI PUSH2 0xFFFF PUSH2 0x5CF PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0xD79 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x5E4 PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH2 0xC59 JUMP JUMPDEST ISZERO PUSH2 0x979 JUMPI PUSH2 0x626 SWAP1 PUSH1 0x60 PUSH2 0x603 PUSH1 0xC4 PUSH1 0x4 CALLDATALOAD ADD PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 DUP4 SWAP3 PUSH4 0x5236A3E7 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x40 PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD SWAP2 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SUB DUP2 DUP5 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x96C JUMPI DUP2 SWAP3 PUSH2 0x939 JUMPI JUMPDEST POP PUSH2 0x6AE PUSH2 0x682 PUSH1 0x24 PUSH1 0x4 CALLDATALOAD ADD PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0xD88 JUMP JUMPDEST PUSH2 0x6A0 DUP6 PUSH1 0x40 SWAP5 SWAP4 SWAP5 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x44 PUSH1 0x4 CALLDATALOAD ADD CALLDATALOAD SWAP2 PUSH1 0x20 DUP7 ADD PUSH2 0xDDC JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xC93 JUMP JUMPDEST PUSH2 0x6BC PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0xD79 JUMP JUMPDEST SWAP1 PUSH2 0xFFFF PUSH2 0x6CE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0xD79 JUMP JUMPDEST AND DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x4 CALLDATALOAD PUSH1 0x64 ADD CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x935 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x84 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x931 JUMPI PUSH2 0x71D PUSH1 0xA4 PUSH1 0x4 CALLDATALOAD ADD PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0xD88 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO PUSH2 0x92D JUMPI SWAP2 DUP8 SWAP6 SWAP4 SWAP2 PUSH2 0xFFFF SWAP8 SWAP6 SWAP4 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP8 PUSH3 0xC58031 PUSH1 0xE8 SHL DUP10 MSTORE AND PUSH1 0x4 DUP9 ADD MSTORE PUSH1 0xC0 PUSH1 0x24 DUP9 ADD MSTORE DUP8 SWAP2 DUP1 SLOAD SWAP1 PUSH2 0x785 DUP3 PUSH2 0xC59 JUMP JUMPDEST SWAP2 DUP3 PUSH1 0xC4 DUP12 ADD MSTORE DUP10 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x905 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x8C2 JUMPI JUMPDEST POP POP SWAP2 PUSH2 0x7C4 DUP8 SWAP7 SWAP5 SWAP3 PUSH2 0x7EC SWAP7 SWAP5 PUSH1 0x3 NOT DUP10 DUP4 SUB ADD PUSH1 0x44 DUP11 ADD MSTORE PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x64 DUP9 ADD MSTORE SWAP4 AND PUSH1 0x84 DUP7 ADD MSTORE DUP5 DUP4 SUB PUSH1 0x3 NOT ADD PUSH1 0xA4 DUP7 ADD MSTORE PUSH2 0xDBB JUMP JUMPDEST SUB DUP2 CALLVALUE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x386 JUMPI PUSH2 0x896 JUMPI JUMPDEST POP SWAP1 PUSH2 0x88C PUSH32 0xFDDCCBC9551702941CA319EF875152663DF18C2A77C25B17B88F42EE51AE98BF PUSH2 0xFFFF PUSH2 0x85D PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x871 PUSH1 0x24 PUSH1 0x4 CALLDATALOAD ADD PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0xD88 JUMP JUMPDEST SWAP5 SWAP1 SWAP6 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 AND SWAP7 CALLER SWAP7 PUSH1 0x44 PUSH1 0x4 CALLDATALOAD ADD CALLDATALOAD SWAP2 DUP6 PUSH2 0xDDC JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8AE JUMPI PUSH1 0x40 MSTORE CODESIZE PUSH2 0x826 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP10 MSTORE PUSH1 0x20 DUP10 KECCAK256 SWAP2 SWAP3 POP DUP9 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x8E8 JUMPI POP POP DUP7 ADD PUSH1 0xE4 ADD SWAP1 PUSH2 0x7C4 PUSH2 0x7EC PUSH2 0x7A4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xE4 DUP5 DUP14 ADD ADD MSTORE DUP12 SWAP10 POP DUP11 SWAP9 POP PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x8CE JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0xE4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 ISZERO ISZERO PUSH1 0x5 SHL ADD SWAP1 SWAP3 ADD SWAP4 POP PUSH2 0x7C4 SWAP2 POP PUSH2 0x7EC SWAP1 POP PUSH2 0x7A4 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x60 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x964 JUMPI JUMPDEST DUP2 PUSH2 0x954 PUSH1 0x60 SWAP4 DUP4 PUSH2 0xC93 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x37A JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x66A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x947 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44657374696E6174696F6E20636861696E206E6F742074727573746564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x16F JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI PUSH1 0x3 NOT PUSH1 0x80 CALLDATASIZE DUP3 ADD SLT PUSH2 0x37A JUMPI PUSH2 0xA99 PUSH2 0xC1A JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x935 JUMPI PUSH2 0xABB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x64 SWAP5 SWAP2 SWAP5 CALLDATALOAD SWAP3 DUP4 GT PUSH2 0x931 JUMPI PUSH1 0x40 SWAP4 PUSH2 0xB1A PUSH2 0xB60 SWAP3 PUSH2 0xAE3 PUSH2 0xFFFF SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC2B JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0xAFF DUP10 MLOAD SWAP11 DUP12 SWAP3 PUSH1 0x60 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP2 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP11 DUP4 ADD MSTORE DUP12 PUSH1 0x60 DUP4 ADD MSTORE SUB PUSH1 0x1F NOT DUP2 ADD DUP11 MSTORE DUP10 PUSH2 0xC93 JUMP JUMPDEST PUSH2 0xB4B DUP8 MLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP8 PUSH4 0x40A7BB1 PUSH1 0xE4 SHL DUP10 MSTORE AND PUSH1 0x4 DUP9 ADD MSTORE ADDRESS PUSH1 0x24 DUP9 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP9 ADD MSTORE PUSH1 0xA4 DUP8 ADD SWAP1 PUSH2 0xCCB JUMP JUMPDEST SWAP3 DUP10 PUSH1 0x64 DUP8 ADD MSTORE DUP6 DUP5 SUB ADD PUSH1 0x84 DUP7 ADD MSTORE PUSH2 0xDBB JUMP JUMPDEST SUB DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x386 JUMPI DUP3 SWAP2 DUP4 SWAP2 PUSH2 0xBAD JUMPI JUMPDEST PUSH1 0x40 DUP4 DUP4 DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP2 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0xBE2 JUMPI JUMPDEST DUP2 PUSH2 0xBC9 PUSH1 0x40 SWAP4 DUP4 PUSH2 0xC93 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x37A JUMPI PUSH1 0x40 SWAP2 POP PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD CODESIZE PUSH2 0xB9D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBBC JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x37A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37A JUMPI PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH2 0xFFFF PUSH2 0xC0D PUSH2 0xC1A JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x3 DUP5 MSTORE KECCAK256 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0xFFFF DUP3 AND DUP3 SUB PUSH2 0x391 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x391 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x391 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x391 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xC89 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xC73 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xC68 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xCB5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xCF7 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x391 JUMPI JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xD35 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 SUB PUSH2 0x391 JUMPI SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x391 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x391 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x391 JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDF6 SWAP1 PUSH1 0x40 SWAP4 SWAP7 SWAP6 SWAP5 SWAP7 PUSH1 0x60 DUP5 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 PUSH2 0xDBB JUMP JUMPDEST SWAP5 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x45CA71BB46D43C84 ADD 0xDD PUSH27 0xEB95918B8ED41331C6DBDF1DAE930C77EBE21E5964736F6C634300 ADDMOD SGT STOP CALLER ","sourceMap":"316:3221:4:-:0;;;;;;;;;;;;;-1:-1:-1;;316:3221:4;;;;-1:-1:-1;;;;;316:3221:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;316:3221:4;;734:10:3;-1:-1:-1;;;;;;316:3221:4;;;;;;;;;-1:-1:-1;;;;;316:3221:4;;;;;;734:10:3;316:3221:4;;;2566:40:0;;-1:-1:-1;2566:40:0;316:3221:4;1716:1:1;;316:3221:4;1247:44;;316:3221;;1302:45;316:3221;;;;;;1247:44;316:3221;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;316:3221:4;;;;;;-1:-1:-1;316:3221:4;;;;;-1:-1:-1;316:3221:4;;;;-1:-1:-1;;;;;316:3221:4;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":3339,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":3115,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint16":{"entryPoint":3098,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_bytes":{"entryPoint":3275,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":3515,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes_calldata_uint256_uint256":{"entryPoint":3548,"id":null,"parameterSlots":5,"returnSlots":1},"access_calldata_tail_bytes_calldata":{"entryPoint":3464,"id":null,"parameterSlots":2,"returnSlots":2},"extract_byte_array_length":{"entryPoint":3161,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3219,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":3361,"id":54,"parameterSlots":0,"returnSlots":0},"read_from_calldatat_uint16":{"entryPoint":3449,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{"299":[{"length":32,"start":940},{"length":32,"start":1826},{"length":32,"start":2033},{"length":32,"start":2916}],"302":[{"length":32,"start":1586},{"length":32,"start":2639}]},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c90816315b86fab14610bea5750806339a52ef714610a7e578063461a758c14610a39578063709890d514610575578063715018a61461051b5780637533d7881461043a5780638da5cb5b14610413578063a02c0b98146103db578063b353aaa714610396578063cea9d26f146102df578063eb8d72b7146101725763f2fde38b146100a557600080fd5b3461016f57602036600319011261016f576100be610d0b565b6100c6610d21565b6001600160a01b0390811690811561011b57600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b80fd5b503461016f57604036600319011261016f5761018c610c1a565b9067ffffffffffffffff6024358181116102db576101b161ffff913690600401610c2b565b9190946101bc610d21565b16835260209360028552604084209282116102c7576101db8354610c59565b601f8111610284575b508394601f8311600114610221575093839482939492610216575b50508160011b916000199060031b1c191617905580f35b0135905038806101ff565b90601f198316958486528286209286905b88821061026c57505083600195969710610252575b505050811b01905580f35b0135600019600384901b60f8161c19169055388080610247565b80600184968294958701358155019501920190610232565b838552858520601f840160051c8101918785106102bd575b601f0160051c01905b8181106102b257506101e4565b8581556001016102a5565b909150819061029c565b634e487b7160e01b84526041600452602484fd5b8280fd5b503461016f57606036600319011261016f576102f9610d0b565b6001600160a01b0390602435828116919082900361039157604460209261031e610d21565b85604051958694859363a9059cbb60e01b8552600485015284356024850152165af180156103865761034e575080f35b6020813d821161037e575b8161036660209383610c93565b8101031261037a57518015150361016f5780f35b5080fd5b3d9150610359565b6040513d84823e3d90fd5b600080fd5b503461016f578060031936011261016f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461016f57604036600319011261016f5761ffff6103f8610c1a565b610400610d21565b1681526003602052602435604082205580f35b503461016f578060031936011261016f57546040516001600160a01b039091168152602090f35b503461016f5760208060031936011261037a5761ffff610458610c1a565b16825260028152604082206040518381949083549061047682610c59565b948585526001928784821691826000146104f75750506001146104bb575b5050506104a392500383610c93565b6104b7604051928284938452830190610ccb565b0390f35b869350819291528282205b8583106104df5750506104a39350820101388080610494565b805483890185015287945086939092019181016104c6565b9350945050506104a394915060ff191682840152151560051b820101388080610494565b503461016f578060031936011261016f57610534610d21565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50602036600319011261016f5767ffffffffffffffff6004351161016f5760e06004353603600319011261016f576002600154146109f457600260015560446004350135156109be5761ffff6105cf600435600401610d79565b16815260026020526105e46040822054610c59565b156109795761062690606061060360c460043501600435600401610d88565b6040519485928392635236a3e760e11b8452604060048501526044840191610dbb565b602482018590520381847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af191821561096c578192610939575b506106ae610682602460043501600435600401610d88565b6106a085604094939451948593604460043501359160208601610ddc565b03601f198101835282610c93565b6106bc600435600401610d79565b9061ffff6106ce600435600401610d79565b16835260026020526040832060043560640135916001600160a01b038316830361093557600435608401356001600160a01b03811681036109315761071d60a460043501600435600401610d88565b9390927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b1561092d57918795939161ffff97959360405198899762c5803160e81b895216600488015260c06024880152879180549061078582610c59565b918260c48b0152896001821691826000146109055750506001146108c2575b5050916107c4879694926107ec96946003198983030160448a0152610ccb565b6001600160a01b039485166064880152931660848601528483036003190160a4860152610dbb565b0381347f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1801561038657610896575b509061088c7ffddccbc9551702941ca319ef875152663df18c2a77c25b17b88f42ee51ae98bf61ffff61085d600435600401610d79565b610871602460043501600435600401610d88565b94909560405193849316963396604460043501359185610ddc565b0390a36001805580f35b67ffffffffffffffff81116108ae5760405238610826565b634e487b7160e01b82526041600452602482fd5b89526020892091925088915b8183106108e8575050860160e401906107c46107ec6107a4565b805460e4848d0101528b99508a98506020909201916001016108ce565b60ff191660e48083019190915293151560051b0190920193506107c491506107ec90506107a4565b8780fd5b8580fd5b8480fd5b9091506060813d8211610964575b8161095460609383610c93565b8101031261037a5751903861066a565b3d9150610947565b50604051903d90823e3d90fd5b60405162461bcd60e51b815260206004820152601d60248201527f44657374696e6174696f6e20636861696e206e6f7420747275737465640000006044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b503461016f578060031936011261016f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461016f5760031960803682011261037a57610a99610c1a565b9067ffffffffffffffff60243581811161093557610abb903690600401610c2b565b60649491943592831161093157604093610b1a610b6092610ae361ffff963690600401610c2b565b929091610aff89519a8b92606060208501526080840191610dbb565b6044358a8301528b606083015203601f1981018a5289610c93565b610b4b8751988997889763040a7bb160e41b895216600488015230602488015260a0604488015260a4870190610ccb565b92896064870152858403016084860152610dbb565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa80156103865782918391610bad575b6040838382519182526020820152f35b9150506040813d604011610be2575b81610bc960409383610c93565b8101031261037a57604091506020815191015138610b9d565b3d9150610bbc565b90503461037a57602036600319011261037a57604060209261ffff610c0d610c1a565b1681526003845220548152f35b6004359061ffff8216820361039157565b9181601f840112156103915782359167ffffffffffffffff8311610391576020838186019501011161039157565b90600182811c92168015610c89575b6020831014610c7357565b634e487b7160e01b600052602260045260246000fd5b91607f1691610c68565b90601f8019910116810190811067ffffffffffffffff821117610cb557604052565b634e487b7160e01b600052604160045260246000fd5b919082519283825260005b848110610cf7575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610cd6565b600435906001600160a01b038216820361039157565b6000546001600160a01b03163303610d3557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b3561ffff811681036103915790565b903590601e1981360301821215610391570180359067ffffffffffffffff82116103915760200191813603831361039157565b908060209392818452848401376000828201840152601f01601f1916010190565b90610df69060409396959496606084526060840191610dbb565b946020820152015256fea26469706673582212206745ca71bb46d43c8401dd7aeb95918b8ed41331c6dbdf1dae930c77ebe21e5964736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x15B86FAB EQ PUSH2 0xBEA JUMPI POP DUP1 PUSH4 0x39A52EF7 EQ PUSH2 0xA7E JUMPI DUP1 PUSH4 0x461A758C EQ PUSH2 0xA39 JUMPI DUP1 PUSH4 0x709890D5 EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x7533D788 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xA02C0B98 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xB353AAA7 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xCEA9D26F EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xEB8D72B7 EQ PUSH2 0x172 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16F JUMPI PUSH2 0xBE PUSH2 0xD0B JUMP JUMPDEST PUSH2 0xC6 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16F JUMPI PUSH2 0x18C PUSH2 0xC1A JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2DB JUMPI PUSH2 0x1B1 PUSH2 0xFFFF SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC2B JUMP JUMPDEST SWAP2 SWAP1 SWAP5 PUSH2 0x1BC PUSH2 0xD21 JUMP JUMPDEST AND DUP4 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x2 DUP6 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP3 DUP3 GT PUSH2 0x2C7 JUMPI PUSH2 0x1DB DUP4 SLOAD PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x284 JUMPI JUMPDEST POP DUP4 SWAP5 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x221 JUMPI POP SWAP4 DUP4 SWAP5 DUP3 SWAP4 SWAP5 SWAP3 PUSH2 0x216 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD CALLDATALOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1FF JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP3 DUP7 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x26C JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x252 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP5 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x247 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP5 SWAP7 DUP3 SWAP5 SWAP6 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD SWAP1 PUSH2 0x232 JUMP JUMPDEST DUP4 DUP6 MSTORE DUP6 DUP6 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP8 DUP6 LT PUSH2 0x2BD JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2B2 JUMPI POP PUSH2 0x1E4 JUMP JUMPDEST DUP6 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2A5 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x29C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16F JUMPI PUSH2 0x2F9 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x391 JUMPI PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH2 0x31E PUSH2 0xD21 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE DUP5 CALLDATALOAD PUSH1 0x24 DUP6 ADD MSTORE AND GAS CALL DUP1 ISZERO PUSH2 0x386 JUMPI PUSH2 0x34E JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x37E JUMPI JUMPDEST DUP2 PUSH2 0x366 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xC93 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x37A JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x16F JUMPI DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x16F JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16F JUMPI PUSH2 0xFFFF PUSH2 0x3F8 PUSH2 0xC1A JUMP JUMPDEST PUSH2 0x400 PUSH2 0xD21 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x40 DUP3 KECCAK256 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x16F JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x37A JUMPI PUSH2 0xFFFF PUSH2 0x458 PUSH2 0xC1A JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x40 MLOAD DUP4 DUP2 SWAP5 SWAP1 DUP4 SLOAD SWAP1 PUSH2 0x476 DUP3 PUSH2 0xC59 JUMP JUMPDEST SWAP5 DUP6 DUP6 MSTORE PUSH1 0x1 SWAP3 DUP8 DUP5 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x4F7 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x4BB JUMPI JUMPDEST POP POP POP PUSH2 0x4A3 SWAP3 POP SUB DUP4 PUSH2 0xC93 JUMP JUMPDEST PUSH2 0x4B7 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0xCCB JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP7 SWAP4 POP DUP2 SWAP3 SWAP2 MSTORE DUP3 DUP3 KECCAK256 JUMPDEST DUP6 DUP4 LT PUSH2 0x4DF JUMPI POP POP PUSH2 0x4A3 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x494 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x4C6 JUMP JUMPDEST SWAP4 POP SWAP5 POP POP POP PUSH2 0x4A3 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x494 JUMP JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x16F JUMPI PUSH2 0x534 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16F JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD GT PUSH2 0x16F JUMPI PUSH1 0xE0 PUSH1 0x4 CALLDATALOAD CALLDATASIZE SUB PUSH1 0x3 NOT ADD SLT PUSH2 0x16F JUMPI PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x9F4 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x44 PUSH1 0x4 CALLDATALOAD ADD CALLDATALOAD ISZERO PUSH2 0x9BE JUMPI PUSH2 0xFFFF PUSH2 0x5CF PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0xD79 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x5E4 PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH2 0xC59 JUMP JUMPDEST ISZERO PUSH2 0x979 JUMPI PUSH2 0x626 SWAP1 PUSH1 0x60 PUSH2 0x603 PUSH1 0xC4 PUSH1 0x4 CALLDATALOAD ADD PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 DUP4 SWAP3 PUSH4 0x5236A3E7 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x40 PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD SWAP2 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SUB DUP2 DUP5 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x96C JUMPI DUP2 SWAP3 PUSH2 0x939 JUMPI JUMPDEST POP PUSH2 0x6AE PUSH2 0x682 PUSH1 0x24 PUSH1 0x4 CALLDATALOAD ADD PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0xD88 JUMP JUMPDEST PUSH2 0x6A0 DUP6 PUSH1 0x40 SWAP5 SWAP4 SWAP5 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x44 PUSH1 0x4 CALLDATALOAD ADD CALLDATALOAD SWAP2 PUSH1 0x20 DUP7 ADD PUSH2 0xDDC JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xC93 JUMP JUMPDEST PUSH2 0x6BC PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0xD79 JUMP JUMPDEST SWAP1 PUSH2 0xFFFF PUSH2 0x6CE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0xD79 JUMP JUMPDEST AND DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x4 CALLDATALOAD PUSH1 0x64 ADD CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x935 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x84 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x931 JUMPI PUSH2 0x71D PUSH1 0xA4 PUSH1 0x4 CALLDATALOAD ADD PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0xD88 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO PUSH2 0x92D JUMPI SWAP2 DUP8 SWAP6 SWAP4 SWAP2 PUSH2 0xFFFF SWAP8 SWAP6 SWAP4 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP8 PUSH3 0xC58031 PUSH1 0xE8 SHL DUP10 MSTORE AND PUSH1 0x4 DUP9 ADD MSTORE PUSH1 0xC0 PUSH1 0x24 DUP9 ADD MSTORE DUP8 SWAP2 DUP1 SLOAD SWAP1 PUSH2 0x785 DUP3 PUSH2 0xC59 JUMP JUMPDEST SWAP2 DUP3 PUSH1 0xC4 DUP12 ADD MSTORE DUP10 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x905 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x8C2 JUMPI JUMPDEST POP POP SWAP2 PUSH2 0x7C4 DUP8 SWAP7 SWAP5 SWAP3 PUSH2 0x7EC SWAP7 SWAP5 PUSH1 0x3 NOT DUP10 DUP4 SUB ADD PUSH1 0x44 DUP11 ADD MSTORE PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x64 DUP9 ADD MSTORE SWAP4 AND PUSH1 0x84 DUP7 ADD MSTORE DUP5 DUP4 SUB PUSH1 0x3 NOT ADD PUSH1 0xA4 DUP7 ADD MSTORE PUSH2 0xDBB JUMP JUMPDEST SUB DUP2 CALLVALUE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x386 JUMPI PUSH2 0x896 JUMPI JUMPDEST POP SWAP1 PUSH2 0x88C PUSH32 0xFDDCCBC9551702941CA319EF875152663DF18C2A77C25B17B88F42EE51AE98BF PUSH2 0xFFFF PUSH2 0x85D PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x871 PUSH1 0x24 PUSH1 0x4 CALLDATALOAD ADD PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0xD88 JUMP JUMPDEST SWAP5 SWAP1 SWAP6 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 AND SWAP7 CALLER SWAP7 PUSH1 0x44 PUSH1 0x4 CALLDATALOAD ADD CALLDATALOAD SWAP2 DUP6 PUSH2 0xDDC JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8AE JUMPI PUSH1 0x40 MSTORE CODESIZE PUSH2 0x826 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP10 MSTORE PUSH1 0x20 DUP10 KECCAK256 SWAP2 SWAP3 POP DUP9 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x8E8 JUMPI POP POP DUP7 ADD PUSH1 0xE4 ADD SWAP1 PUSH2 0x7C4 PUSH2 0x7EC PUSH2 0x7A4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xE4 DUP5 DUP14 ADD ADD MSTORE DUP12 SWAP10 POP DUP11 SWAP9 POP PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x8CE JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0xE4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 ISZERO ISZERO PUSH1 0x5 SHL ADD SWAP1 SWAP3 ADD SWAP4 POP PUSH2 0x7C4 SWAP2 POP PUSH2 0x7EC SWAP1 POP PUSH2 0x7A4 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x60 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x964 JUMPI JUMPDEST DUP2 PUSH2 0x954 PUSH1 0x60 SWAP4 DUP4 PUSH2 0xC93 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x37A JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x66A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x947 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44657374696E6174696F6E20636861696E206E6F742074727573746564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x16F JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x16F JUMPI PUSH1 0x3 NOT PUSH1 0x80 CALLDATASIZE DUP3 ADD SLT PUSH2 0x37A JUMPI PUSH2 0xA99 PUSH2 0xC1A JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x935 JUMPI PUSH2 0xABB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x64 SWAP5 SWAP2 SWAP5 CALLDATALOAD SWAP3 DUP4 GT PUSH2 0x931 JUMPI PUSH1 0x40 SWAP4 PUSH2 0xB1A PUSH2 0xB60 SWAP3 PUSH2 0xAE3 PUSH2 0xFFFF SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC2B JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0xAFF DUP10 MLOAD SWAP11 DUP12 SWAP3 PUSH1 0x60 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP2 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP11 DUP4 ADD MSTORE DUP12 PUSH1 0x60 DUP4 ADD MSTORE SUB PUSH1 0x1F NOT DUP2 ADD DUP11 MSTORE DUP10 PUSH2 0xC93 JUMP JUMPDEST PUSH2 0xB4B DUP8 MLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP8 PUSH4 0x40A7BB1 PUSH1 0xE4 SHL DUP10 MSTORE AND PUSH1 0x4 DUP9 ADD MSTORE ADDRESS PUSH1 0x24 DUP9 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP9 ADD MSTORE PUSH1 0xA4 DUP8 ADD SWAP1 PUSH2 0xCCB JUMP JUMPDEST SWAP3 DUP10 PUSH1 0x64 DUP8 ADD MSTORE DUP6 DUP5 SUB ADD PUSH1 0x84 DUP7 ADD MSTORE PUSH2 0xDBB JUMP JUMPDEST SUB DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x386 JUMPI DUP3 SWAP2 DUP4 SWAP2 PUSH2 0xBAD JUMPI JUMPDEST PUSH1 0x40 DUP4 DUP4 DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP2 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0xBE2 JUMPI JUMPDEST DUP2 PUSH2 0xBC9 PUSH1 0x40 SWAP4 DUP4 PUSH2 0xC93 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x37A JUMPI PUSH1 0x40 SWAP2 POP PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD CODESIZE PUSH2 0xB9D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xBBC JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x37A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x37A JUMPI PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH2 0xFFFF PUSH2 0xC0D PUSH2 0xC1A JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x3 DUP5 MSTORE KECCAK256 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0xFFFF DUP3 AND DUP3 SUB PUSH2 0x391 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x391 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x391 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x391 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xC89 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xC73 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xC68 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xCB5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xCF7 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x391 JUMPI JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xD35 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 SUB PUSH2 0x391 JUMPI SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x391 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x391 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x391 JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDF6 SWAP1 PUSH1 0x40 SWAP4 SWAP7 SWAP6 SWAP5 SWAP7 PUSH1 0x60 DUP5 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 PUSH2 0xDBB JUMP JUMPDEST SWAP5 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x45CA71BB46D43C84 ADD 0xDD PUSH27 0xEB95918B8ED41331C6DBDF1DAE930C77EBE21E5964736F6C634300 ADDMOD SGT STOP CALLER ","sourceMap":"316:3221:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:3221:4;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;316:3221:4;;;;2162:22:0;;316:3221:4;;;;;;;;;;;;;;2566:40:0;316:3221:4;2566:40:0;;316:3221:4;;;;;-1:-1:-1;;;316:3221:4;;;;;;;;;;;;;;;;;-1:-1:-1;;;316:3221:4;;;;;;;;;;;;;;;;;-1:-1:-1;;316:3221:4;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;1063:62:0;;;;;:::i;:::-;316:3221:4;;;;;3130:19;316:3221;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;316:3221:4;;;;;2740:34;;;316:3221;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:3221:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;316:3221:4;;;;;-1:-1:-1;;;316:3221:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:3221:4;;;;;;:::i;:::-;-1:-1:-1;;;;;316:3221:4;;;;;;;;;;;;;;;1063:62:0;;;:::i;:::-;316:3221:4;;;;;;;;;;;3489:37;;316:3221;3489:37;;316:3221;;;;;;;;3489:37;;;;;;;;316:3221;;;3489:37;316:3221;3489:37;;;;;;;;;316:3221;3489:37;;;:::i;:::-;;;316:3221;;;;;;;;;;;;;;;;;3489:37;;;-1:-1:-1;3489:37:4;;;316:3221;;;;;;;;;;;;;;;;;;;;;;;;;;;;375:46;-1:-1:-1;;;;;316:3221:4;;;;;;;;;;;;;-1:-1:-1;;316:3221:4;;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;316:3221:4;;;;;;;;;;;1759:1:1;316:3221:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;316:3221:4;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;481:51;316:3221;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;316:3221:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;316:3221:4;;;-1:-1:-1;;;;;;316:3221:4;;;;-1:-1:-1;;;;;316:3221:4;2566:40:0;316:3221:4;;2566:40:0;316:3221:4;;;-1:-1:-1;316:3221:4;;-1:-1:-1;;316:3221:4;;;;;;;;;;;;;;;-1:-1:-1;;316:3221:4;;;;1759:1:1;2468:7;316:3221:4;2468:19:1;1759:1;;;2468:7;1759:1;1478:13:4;316:3221;;1478:13;316:3221;1478:17;316:3221;;;1567:17;316:3221;;;;1567:17;:::i;:::-;316:3221;;;1759:1:1;316:3221:4;;;;;;;;:::i;:::-;1547:50;316:3221;;;;1743:94;1793:17;;316:3221;;1793:17;316:3221;;;;1793:17;:::i;:::-;316:3221;;;;;;;;;;1743:94;;316:3221;;1743:94;;316:3221;1478:13;316:3221;;;;:::i;:::-;;;;;;;1743:94;316:3221;;1743:13;-1:-1:-1;;;;;316:3221:4;1743:94;;;;;;;;;;;316:3221;;1873:100;1898:16;316:3221;;;1898:16;316:3221;;;;1898:16;:::i;:::-;1873:100;316:3221;;;;;;;;;1478:13;316:3221;;1478:13;316:3221;1873:100;316:3221;1873:100;;;:::i;:::-;;2740:34;;1873:100;;;;;;:::i;:::-;2085:17;316:3221;;;;2085:17;:::i;:::-;316:3221;;2137:17;316:3221;;;;2137:17;:::i;:::-;316:3221;;;1759:1:1;316:3221:4;;;;;;;2192:20;;316:3221;;-1:-1:-1;;;;;316:3221:4;;;;;;;;2227:24;;316:3221;-1:-1:-1;;;;;316:3221:4;;;;;;2266:20;;316:3221;;2266:20;316:3221;;;;2266:20;:::i;:::-;316:3221;;;2037:10;-1:-1:-1;;;;;316:3221:4;2037:260;;;;316:3221;;;;;;;;;;;;;;;;;2037:260;;316:3221;;2037:260;;316:3221;1793:17;316:3221;;;;;;;;;;;;:::i;:::-;;;1793:17;316:3221;;;;2468:7:1;316:3221:4;;2468:7:1;;316:3221:4;2468:7:1;;;316:3221:4;;;;;;;;;;;;;;;;;;;;;;;;1478:13;316:3221;;;;:::i;:::-;-1:-1:-1;;;;;316:3221:4;;;2192:20;316:3221;;;;;2227:24;316:3221;;;;;;-1:-1:-1;;316:3221:4;2266:20;316:3221;;;;:::i;:::-;2037:260;2060:9;;2037:10;-1:-1:-1;;;;;316:3221:4;2037:260;;;;;;;;316:3221;;;2315:157;;316:3221;2365:17;316:3221;;;;2365:17;:::i;:::-;2397:16;316:3221;;;1898:16;316:3221;;;;2397:16;:::i;:::-;316:3221;;;;;;;;;2340:10;;316:3221;1478:13;316:3221;;1478:13;316:3221;2315:157;;;:::i;:::-;;;;2468:7:1;1759:1;;316:3221:4;;2037:260;316:3221;;;;;;;2037:260;;;316:3221;-1:-1:-1;;;316:3221:4;;;;;;;;;;;;;;;;-1:-1:-1;316:3221:4;;;;;;;;-1:-1:-1;;316:3221:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;316:3221:4;;-1:-1:-1;316:3221:4;;;;;2468:7:1;316:3221:4;;;;-1:-1:-1;;316:3221:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;316:3221:4;;-1:-1:-1;316:3221:4;;-1:-1:-1;316:3221:4;;2037:260;316:3221;;;;;;;;;;;1743:94;;;;;;;;;;;;;;;;;;:::i;:::-;;;316:3221;;;;;1743:94;;;;;;;-1:-1:-1;1743:94:4;;;316:3221;;;;;;;;;;;;;;-1:-1:-1;;;316:3221:4;;;;;;;;;;;;;1478:13;316:3221;;;;;;;;;-1:-1:-1;;;316:3221:4;;;;;;;;;;;;-1:-1:-1;;;1478:13:4;316:3221;;;;;;1759:1:1;316:3221:4;;-1:-1:-1;;;1759:1:1;;316:3221:4;;1759:1:1;;;;;;;316:3221:4;1759:1:1;316:3221:4;;;1759:1:1;;;;316:3221:4;;;;;;;;;;;;;;;428:44;-1:-1:-1;;;;;316:3221:4;;;;;;;;;;;-1:-1:-1;;316:3221:4;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2740:34;316:3221;;;;;;;;;;:::i;:::-;;;;;;;2740:34;;;316:3221;;2740:34;;316:3221;;;;;;:::i;:::-;;;;;;;;;;;;2740:34;;;;;;;;;:::i;:::-;316:3221;;;;;;;;;;;2805:183;;316:3221;;2805:183;;316:3221;2885:4;316:3221;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;2805:183;316:3221;2805:10;-1:-1:-1;;;;;316:3221:4;2805:183;;;;;;;316:3221;;2805:183;;;316:3221;;;;;;;;;;;;;;2805:183;;;;316:3221;2805:183;;316:3221;2805:183;;;;;;316:3221;2805:183;;;:::i;:::-;;;316:3221;;;;;;;;;;;;;2805:183;;;;;;-1:-1:-1;2805:183:4;;316:3221;;;;;;;;-1:-1:-1;;316:3221:4;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;2740:34;;;316:3221;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;316:3221:4;;;;;;;;;-1:-1:-1;316:3221:4;;;;;;;;2740:34;;;316:3221;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;316:3221:4;;;;;;:::o;1359:130:0:-;1273:6;316:3221:4;-1:-1:-1;;;;;316:3221:4;734:10:3;1422:23:0;316:3221:4;;1359:130:0:o;316:3221:4:-;;;;1759:1:1;;;316:3221:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;316:3221:4;;;;;;2740:34;316:3221;-1:-1:-1;;316:3221:4;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"727600","executionCost":"infinite","totalCost":"infinite"},"external":{"estimateFees(uint16,bytes,uint256,bytes)":"infinite","lzEndpoint()":"infinite","minDstGasLookup(uint16)":"2385","owner()":"2419","priceConsumer()":"infinite","renounceOwnership()":"28153","rescueTokens(address,address,uint256)":"infinite","sendTokens((uint16,bytes,uint256,address,address,bytes,bytes))":"infinite","setMinDstGas(uint16,uint256)":"24695","setTrustedRemote(uint16,bytes)":"infinite","transferOwnership(address)":"28400","trustedRemoteLookup(uint16)":"infinite"}},"methodIdentifiers":{"estimateFees(uint16,bytes,uint256,bytes)":"39a52ef7","lzEndpoint()":"b353aaa7","minDstGasLookup(uint16)":"15b86fab","owner()":"8da5cb5b","priceConsumer()":"461a758c","renounceOwnership()":"715018a6","rescueTokens(address,address,uint256)":"cea9d26f","sendTokens((uint16,bytes,uint256,address,address,bytes,bytes))":"709890d5","setMinDstGas(uint16,uint256)":"a02c0b98","setTrustedRemote(uint16,bytes)":"eb8d72b7","transferOwnership(address)":"f2fde38b","trustedRemoteLookup(uint16)":"7533d788"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lzEndpoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceConsumer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TokensReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"toAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TokensSent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_toAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"estimateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceConsumer\",\"outputs\":[{\"internalType\":\"contract PriceConsumer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"toAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zroPaymentAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"adapterParams\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"priceProof\",\"type\":\"bytes\"}],\"internalType\":\"struct BridgeContract.BridgeParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"sendTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/BridgeContract.sol\":\"BridgeContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"src/contracts/BridgeContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.19;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\r\\nimport \\\"./PriceConsumer.sol\\\";\\r\\n\\r\\ncontract BridgeContract is Ownable, ReentrancyGuard {\\r\\n    ILayerZeroEndpoint public immutable lzEndpoint;\\r\\n    PriceConsumer public immutable priceConsumer;\\r\\n\\r\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\r\\n    mapping(uint16 => uint256) public minDstGasLookup;\\r\\n\\r\\n    struct BridgeParams {\\r\\n        uint16 dstChainId;\\r\\n        bytes toAddress;\\r\\n        uint256 amount;\\r\\n        address payable refundAddress;\\r\\n        address zroPaymentAddress;\\r\\n        bytes adapterParams;\\r\\n        bytes priceProof;\\r\\n    }\\r\\n\\r\\n    event TokensSent(\\r\\n        address indexed from,\\r\\n        uint16 indexed dstChainId,\\r\\n        bytes toAddress,\\r\\n        uint256 amount,\\r\\n        uint256 price\\r\\n    );\\r\\n\\r\\n    event TokensReceived(\\r\\n        address indexed to,\\r\\n        uint16 indexed srcChainId,\\r\\n        uint256 amount,\\r\\n        uint256 price\\r\\n    );\\r\\n\\r\\n    constructor(address _lzEndpoint, address _priceConsumer) Ownable() {\\r\\n        lzEndpoint = ILayerZeroEndpoint(_lzEndpoint);\\r\\n        priceConsumer = PriceConsumer(_priceConsumer);\\r\\n    }\\r\\n\\r\\n    function sendTokens(\\r\\n        BridgeParams calldata params\\r\\n    ) external payable nonReentrant {\\r\\n        require(params.amount > 0, \\\"Invalid amount\\\");\\r\\n        require(\\r\\n            trustedRemoteLookup[params.dstChainId].length != 0,\\r\\n            \\\"Destination chain not trusted\\\"\\r\\n        );\\r\\n\\r\\n        // Get the verified price using Supra Oracle\\r\\n        (uint256 price, , ) = priceConsumer.getPriceDataWithRound(\\r\\n            params.priceProof,\\r\\n            0\\r\\n        );\\r\\n\\r\\n        bytes memory payload = abi.encode(\\r\\n            params.toAddress,\\r\\n            params.amount,\\r\\n            price\\r\\n        );\\r\\n\\r\\n        // Send cross-chain message via LayerZero\\r\\n        lzEndpoint.send{value: msg.value}(\\r\\n            params.dstChainId,\\r\\n            trustedRemoteLookup[params.dstChainId],\\r\\n            payload,\\r\\n            params.refundAddress,\\r\\n            params.zroPaymentAddress,\\r\\n            params.adapterParams\\r\\n        );\\r\\n\\r\\n        emit TokensSent(\\r\\n            msg.sender,\\r\\n            params.dstChainId,\\r\\n            params.toAddress,\\r\\n            params.amount,\\r\\n            price\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function estimateFees(\\r\\n        uint16 _dstChainId,\\r\\n        bytes calldata _toAddress,\\r\\n        uint256 _amount,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external view returns (uint256 nativeFee, uint256 zroFee) {\\r\\n        bytes memory payload = abi.encode(_toAddress, _amount, 0);\\r\\n        return\\r\\n            lzEndpoint.estimateFees(\\r\\n                _dstChainId,\\r\\n                address(this),\\r\\n                payload,\\r\\n                false,\\r\\n                _adapterParams\\r\\n            );\\r\\n    }\\r\\n\\r\\n    function setTrustedRemote(\\r\\n        uint16 _remoteChainId,\\r\\n        bytes calldata _path\\r\\n    ) external onlyOwner {\\r\\n        trustedRemoteLookup[_remoteChainId] = _path;\\r\\n    }\\r\\n\\r\\n    function setMinDstGas(\\r\\n        uint16 _dstChainId,\\r\\n        uint256 _minGas\\r\\n    ) external onlyOwner {\\r\\n        minDstGasLookup[_dstChainId] = _minGas;\\r\\n    }\\r\\n\\r\\n    function rescueTokens(\\r\\n        address _token,\\r\\n        address _to,\\r\\n        uint256 _amount\\r\\n    ) external onlyOwner {\\r\\n        IERC20(_token).transfer(_to, _amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6772ce8f25b55ff6095c2987d39c4336ad6c905b78d9c8424c469a782ed7e3ee\",\"license\":\"MIT\"},\"src/contracts/PriceConsumer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.19;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"./interfaces/ISupraOraclePull.sol\\\";\\r\\n\\r\\ncontract PriceConsumer is Ownable {\\r\\n    ISupraOraclePull public oracle;\\r\\n    \\r\\n    event PriceReceived(uint256 pair, uint256 price, uint256 timestamp, uint256 round);\\r\\n    \\r\\n    constructor(address oracleAddress) Ownable() {\\r\\n        oracle = ISupraOraclePull(oracleAddress);\\r\\n    }\\r\\n    \\r\\n    function getPriceData(bytes calldata _bytesProof, uint256 pair) \\r\\n        external \\r\\n        returns (uint256 price, uint256 decimals) \\r\\n    {\\r\\n        ISupraOraclePull.PriceData memory prices = oracle.verifyOracleProof(_bytesProof);\\r\\n        \\r\\n        for (uint256 i = 0; i < prices.pairs.length; i++) {\\r\\n            if (prices.pairs[i] == pair) {\\r\\n                return (prices.prices[i], prices.decimals[i]);\\r\\n            }\\r\\n        }\\r\\n        revert(\\\"Pair not found\\\");\\r\\n    }\\r\\n    \\r\\n    function getPriceDataWithRound(bytes calldata _bytesProof, uint256 pair) \\r\\n        external \\r\\n        returns (uint256 price, uint256 timestamp, uint256 round) \\r\\n    {\\r\\n        ISupraOraclePull.PriceInfo memory prices = oracle.verifyOracleProofV2(_bytesProof);\\r\\n        \\r\\n        for (uint256 i = 0; i < prices.pairs.length; i++) {\\r\\n            if (prices.pairs[i] == pair) {\\r\\n                price = prices.prices[i];\\r\\n                timestamp = prices.timestamp[i];\\r\\n                round = prices.round[i];\\r\\n                emit PriceReceived(pair, price, timestamp, round);\\r\\n                return (price, timestamp, round);\\r\\n            }\\r\\n        }\\r\\n        revert(\\\"Pair not found\\\");\\r\\n    }\\r\\n    \\r\\n    function updateOracleAddress(address newOracleAddress) external onlyOwner {\\r\\n        oracle = ISupraOraclePull(newOracleAddress);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xd73c5b606ad3ca3bc6c5a297dd838eaf5c7a8787bf2e642ea61b3836951d791f\",\"license\":\"MIT\"},\"src/contracts/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.19;\\r\\n\\r\\ninterface ILayerZeroEndpoint {\\r\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _destination - the address on destination chain (in bytes)\\r\\n    // @param _payload - a custom bytes payload to send to the destination contract\\r\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\r\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\r\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\r\\n    function send(\\r\\n        uint16 _dstChainId,\\r\\n        bytes calldata _destination,\\r\\n        bytes calldata _payload,\\r\\n        address payable _refundAddress,\\r\\n        address _zroPaymentAddress,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable;\\r\\n\\r\\n    // @notice used by the messaging library to publish verified payload\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\r\\n    // @param _dstAddress - the address on destination chain\\r\\n    // @param _nonce - the ordered message nonce\\r\\n    // @param _gasLimit - the gas limit for external contract execution\\r\\n    // @param _payload - verified payload to send to the destination contract\\r\\n    function receivePayload(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        address _dstAddress,\\r\\n        uint64 _nonce,\\r\\n        uint _gasLimit,\\r\\n        bytes calldata _payload\\r\\n    ) external;\\r\\n\\r\\n    // @notice get the inboundNonce of a receiver from a source chain\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getInboundNonce(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress\\r\\n    ) external view returns (uint64);\\r\\n\\r\\n    // @notice get the outboundNonce from this source chain to a destination chain\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getOutboundNonce(\\r\\n        uint16 _dstChainId,\\r\\n        address _srcAddress\\r\\n    ) external view returns (uint64);\\r\\n\\r\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _userApplication - the user app address on this chain\\r\\n    // @param _payload - the custom message to send over LayerZero\\r\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\r\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\r\\n    function estimateFees(\\r\\n        uint16 _dstChainId,\\r\\n        address _userApplication,\\r\\n        bytes calldata _payload,\\r\\n        bool _payInZRO,\\r\\n        bytes calldata _adapterParam\\r\\n    ) external view returns (uint nativeFee, uint zroFee);\\r\\n}\\r\\n\",\"keccak256\":\"0xee25928d1bfb4cd214526d6af78ab4f080cd4efb0ea7ae0b4087b33ad808fefd\",\"license\":\"MIT\"},\"src/contracts/interfaces/ISupraOraclePull.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.19;\\r\\n\\r\\ninterface ISupraOraclePull {\\r\\n    struct PriceData {\\r\\n        uint256[] pairs;\\r\\n        uint256[] prices;\\r\\n        uint256[] decimals;\\r\\n    }\\r\\n\\r\\n    struct PriceInfo {\\r\\n        uint256[] pairs;\\r\\n        uint256[] prices;\\r\\n        uint256[] timestamp;\\r\\n        uint256[] decimal;\\r\\n        uint256[] round;\\r\\n    }\\r\\n\\r\\n    function verifyOracleProof(bytes calldata _bytesproof) \\r\\n        external \\r\\n        returns (PriceData memory);\\r\\n\\r\\n    function verifyOracleProofV2(bytes calldata _bytesProof) \\r\\n        external     \\r\\n        returns (PriceInfo memory);\\r\\n}\",\"keccak256\":\"0xde0d45d9927cb8431657bfac4421502004d01fcf351219977e20ccb121556ffc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"src/contracts/BridgeContract.sol:BridgeContract","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":123,"contract":"src/contracts/BridgeContract.sol:BridgeContract","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":306,"contract":"src/contracts/BridgeContract.sol:BridgeContract","label":"trustedRemoteLookup","offset":0,"slot":"2","type":"t_mapping(t_uint16,t_bytes_storage)"},{"astId":310,"contract":"src/contracts/BridgeContract.sol:BridgeContract","label":"minDstGasLookup","offset":0,"slot":"3","type":"t_mapping(t_uint16,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint16,t_uint256)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/contracts/PriceConsumer.sol":{"PriceConsumer":{"abi":[{"inputs":[{"internalType":"address","name":"oracleAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"pair","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"round","type":"uint256"}],"name":"PriceReceived","type":"event"},{"inputs":[{"internalType":"bytes","name":"_bytesProof","type":"bytes"},{"internalType":"uint256","name":"pair","type":"uint256"}],"name":"getPriceData","outputs":[{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"_bytesProof","type":"bytes"},{"internalType":"uint256","name":"pair","type":"uint256"}],"name":"getPriceDataWithRound","outputs":[{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"round","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"oracle","outputs":[{"internalType":"contract ISupraOraclePull","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOracleAddress","type":"address"}],"name":"updateOracleAddress","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080346100a757601f6108ec38819003918201601f19168301916001600160401b038311848410176100ac578084926020946040528339810103126100a757516001600160a01b0390818116908190036100a75760005460018060a01b0319903382821617600055604051933391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600154161760015561082990816100c38239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe604060808152600436101561001357600080fd5b600090813560e01c908163715018a61461022a5781637dc0d1d0146102015781638da5cb5b146101d95781639807d25d146101b4578163a46d47ce14610186578163f2fde38b146100be575063f7023bb61461006e57600080fd5b346100bb5760203660031901126100bb576004356001600160a01b038116908190036100b75761009c6102d7565b6bffffffffffffffffffffffff60a01b600154161760015580f35b5080fd5b80fd5b9050346100b75760203660031901126100b7576001600160a01b036004358181169290839003610182576100f06102d7565b8215610130575082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b5162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b8380fd5b9050346100b7576060906101a261019c36610284565b916105f4565b91929081519384526020840152820152f35b82346100bb57506101cd6101c736610284565b91610445565b82519182526020820152f35b9050346100b757816003193601126100b757905490516001600160a01b039091168152602090f35b9050346100b757816003193601126100b75760015490516001600160a01b039091168152602090f35b82346100bb57806003193601126100bb576102436102d7565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b9060406003198301126102d25760043567ffffffffffffffff928382116102d257806023830112156102d25781600401359384116102d257602484830101116102d257602401919060243590565b600080fd5b6000546001600160a01b031633036102eb57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff82111761035157604052565b634e487b7160e01b600052604160045260246000fd5b9080601f830112156102d25781519067ffffffffffffffff8211610351578160051b6040519360209361039c8584018761032f565b855283808601928201019283116102d2578301905b8282106103bf575050505090565b815181529083019083016103b1565b90918060409360208452816020850152848401376000828201840152601f01601f1916010190565b60001981146104055760010190565b634e487b7160e01b600052601160045260246000fd5b805182101561042f5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b926104799260008060019460018060a01b03865416604098838a51809a81958294632ce81dbd60e21b8452600484016103ce565b03925af19485156105e857819561051e575b50835b6104c8575b855162461bcd60e51b815260206004820152600e60248201526d14185a5c881b9bdd08199bdd5b9960921b6044820152606490fd5b84518051821015610518576104de82849261041b565b51146104f3576104ed906103f6565b8361048e565b9193949050610514925061050b82602087015161041b565b5194015161041b565b5190565b50610493565b9094503d8086833e610530818361032f565b81016020828203126105e457815167ffffffffffffffff928382116105c45701916060838303126105e05787519260608401848110838211176105cc57895280518281116105c85783610584918301610367565b845260208101518281116105c8578361059e918301610367565b6020850152888101519182116105c4576105b9929101610367565b86820152933861048b565b8780fd5b8880fd5b634e487b7160e01b89526041600452602489fd5b8680fd5b8580fd5b508551903d90823e3d90fd5b926106289260008060019460018060a01b03865416604098838a51809a81958294633dcd979360e01b8452600484016103ce565b03925af19485156105e8578195610713575b50835b61067657855162461bcd60e51b815260206004820152600e60248201526d14185a5c881b9bdd08199bdd5b9960921b6044820152606490fd5b845180518210156105185761068c82849261041b565b51146106a15761069b906103f6565b8361063d565b936106fa959293507f5396f73806124013c800248a3abdf9e9fffe444d69b665b4edf9c9584c05ffa0916020956106db818885015161041b565b5194856106eb838387015161041b565b51998a9360808097015161041b565b51988251948552840152820152856060820152a1929190565b9094503d8086833e610725818361032f565b81016020828203126105e457815167ffffffffffffffff928382116105c457019160a0838303126105e05787519260a08401848110838211176105cc57895280518281116105c85783610779918301610367565b845260208101518281116105c85783610793918301610367565b6020850152888101518281116105c857836107af918301610367565b8985015260608101518281116105c857836107cb918301610367565b606085015260808101519182116105c4576107e7929101610367565b6080820152933861063a56fea2646970667358221220988c73bce0984a386f70dba032153d7430f44e7704dd706bb739cd1de17552ca64736f6c63430008130033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0xA7 JUMPI PUSH1 0x1F PUSH2 0x8EC CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xAC JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xA7 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xA7 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP1 CALLER DUP3 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP4 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH2 0x829 SWAP1 DUP2 PUSH2 0xC3 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x715018A6 EQ PUSH2 0x22A JUMPI DUP2 PUSH4 0x7DC0D1D0 EQ PUSH2 0x201 JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D9 JUMPI DUP2 PUSH4 0x9807D25D EQ PUSH2 0x1B4 JUMPI DUP2 PUSH4 0xA46D47CE EQ PUSH2 0x186 JUMPI DUP2 PUSH4 0xF2FDE38B EQ PUSH2 0xBE JUMPI POP PUSH4 0xF7023BB6 EQ PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xBB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xBB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xB7 JUMPI PUSH2 0x9C PUSH2 0x2D7 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xB7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x182 JUMPI PUSH2 0xF0 PUSH2 0x2D7 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x130 JUMPI POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xB7 JUMPI PUSH1 0x60 SWAP1 PUSH2 0x1A2 PUSH2 0x19C CALLDATASIZE PUSH2 0x284 JUMP JUMPDEST SWAP2 PUSH2 0x5F4 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0xBB JUMPI POP PUSH2 0x1CD PUSH2 0x1C7 CALLDATASIZE PUSH2 0x284 JUMP JUMPDEST SWAP2 PUSH2 0x445 JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xB7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB7 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xB7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB7 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0xBB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xBB JUMPI PUSH2 0x243 PUSH2 0x2D7 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x2D2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 GT PUSH2 0x2D2 JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x2D2 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x2D2 JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x2D2 JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2EB JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x351 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2D2 JUMPI DUP2 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x351 JUMPI DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD SWAP4 PUSH1 0x20 SWAP4 PUSH2 0x39C DUP6 DUP5 ADD DUP8 PUSH2 0x32F JUMP JUMPDEST DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x2D2 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3BF JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x3B1 JUMP JUMPDEST SWAP1 SWAP2 DUP1 PUSH1 0x40 SWAP4 PUSH1 0x20 DUP5 MSTORE DUP2 PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x405 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x42F JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 PUSH2 0x479 SWAP3 PUSH1 0x0 DUP1 PUSH1 0x1 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 SLOAD AND PUSH1 0x40 SWAP9 DUP4 DUP11 MLOAD DUP1 SWAP11 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x2CE81DBD PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x3CE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x5E8 JUMPI DUP2 SWAP6 PUSH2 0x51E JUMPI JUMPDEST POP DUP4 JUMPDEST PUSH2 0x4C8 JUMPI JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x14185A5C881B9BDD08199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x518 JUMPI PUSH2 0x4DE DUP3 DUP5 SWAP3 PUSH2 0x41B JUMP JUMPDEST MLOAD EQ PUSH2 0x4F3 JUMPI PUSH2 0x4ED SWAP1 PUSH2 0x3F6 JUMP JUMPDEST DUP4 PUSH2 0x48E JUMP JUMPDEST SWAP2 SWAP4 SWAP5 SWAP1 POP PUSH2 0x514 SWAP3 POP PUSH2 0x50B DUP3 PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x41B JUMP JUMPDEST MLOAD SWAP5 ADD MLOAD PUSH2 0x41B JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST POP PUSH2 0x493 JUMP JUMPDEST SWAP1 SWAP5 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x530 DUP2 DUP4 PUSH2 0x32F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x5E4 JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 GT PUSH2 0x5C4 JUMPI ADD SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x5E0 JUMPI DUP8 MLOAD SWAP3 PUSH1 0x60 DUP5 ADD DUP5 DUP2 LT DUP4 DUP3 GT OR PUSH2 0x5CC JUMPI DUP10 MSTORE DUP1 MLOAD DUP3 DUP2 GT PUSH2 0x5C8 JUMPI DUP4 PUSH2 0x584 SWAP2 DUP4 ADD PUSH2 0x367 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD DUP3 DUP2 GT PUSH2 0x5C8 JUMPI DUP4 PUSH2 0x59E SWAP2 DUP4 ADD PUSH2 0x367 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE DUP9 DUP2 ADD MLOAD SWAP2 DUP3 GT PUSH2 0x5C4 JUMPI PUSH2 0x5B9 SWAP3 SWAP2 ADD PUSH2 0x367 JUMP JUMPDEST DUP7 DUP3 ADD MSTORE SWAP4 CODESIZE PUSH2 0x48B JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP DUP6 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 PUSH2 0x628 SWAP3 PUSH1 0x0 DUP1 PUSH1 0x1 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 SLOAD AND PUSH1 0x40 SWAP9 DUP4 DUP11 MLOAD DUP1 SWAP11 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x3DCD9793 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x3CE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x5E8 JUMPI DUP2 SWAP6 PUSH2 0x713 JUMPI JUMPDEST POP DUP4 JUMPDEST PUSH2 0x676 JUMPI DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x14185A5C881B9BDD08199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x518 JUMPI PUSH2 0x68C DUP3 DUP5 SWAP3 PUSH2 0x41B JUMP JUMPDEST MLOAD EQ PUSH2 0x6A1 JUMPI PUSH2 0x69B SWAP1 PUSH2 0x3F6 JUMP JUMPDEST DUP4 PUSH2 0x63D JUMP JUMPDEST SWAP4 PUSH2 0x6FA SWAP6 SWAP3 SWAP4 POP PUSH32 0x5396F73806124013C800248A3ABDF9E9FFFE444D69B665B4EDF9C9584C05FFA0 SWAP2 PUSH1 0x20 SWAP6 PUSH2 0x6DB DUP2 DUP9 DUP6 ADD MLOAD PUSH2 0x41B JUMP JUMPDEST MLOAD SWAP5 DUP6 PUSH2 0x6EB DUP4 DUP4 DUP8 ADD MLOAD PUSH2 0x41B JUMP JUMPDEST MLOAD SWAP10 DUP11 SWAP4 PUSH1 0x80 DUP1 SWAP8 ADD MLOAD PUSH2 0x41B JUMP JUMPDEST MLOAD SWAP9 DUP3 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE DUP6 PUSH1 0x60 DUP3 ADD MSTORE LOG1 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP5 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x725 DUP2 DUP4 PUSH2 0x32F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x5E4 JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 GT PUSH2 0x5C4 JUMPI ADD SWAP2 PUSH1 0xA0 DUP4 DUP4 SUB SLT PUSH2 0x5E0 JUMPI DUP8 MLOAD SWAP3 PUSH1 0xA0 DUP5 ADD DUP5 DUP2 LT DUP4 DUP3 GT OR PUSH2 0x5CC JUMPI DUP10 MSTORE DUP1 MLOAD DUP3 DUP2 GT PUSH2 0x5C8 JUMPI DUP4 PUSH2 0x779 SWAP2 DUP4 ADD PUSH2 0x367 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD DUP3 DUP2 GT PUSH2 0x5C8 JUMPI DUP4 PUSH2 0x793 SWAP2 DUP4 ADD PUSH2 0x367 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE DUP9 DUP2 ADD MLOAD DUP3 DUP2 GT PUSH2 0x5C8 JUMPI DUP4 PUSH2 0x7AF SWAP2 DUP4 ADD PUSH2 0x367 JUMP JUMPDEST DUP10 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD DUP3 DUP2 GT PUSH2 0x5C8 JUMPI DUP4 PUSH2 0x7CB SWAP2 DUP4 ADD PUSH2 0x367 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD SWAP2 DUP3 GT PUSH2 0x5C4 JUMPI PUSH2 0x7E7 SWAP3 SWAP2 ADD PUSH2 0x367 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE SWAP4 CODESIZE PUSH2 0x63A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 DUP13 PUSH20 0xBCE0984A386F70DBA032153D7430F44E7704DD70 PUSH12 0xB739CD1DE17552CA64736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"161:1635:5:-:0;;;;;;;;;;;;;-1:-1:-1;;161:1635:5;;;;-1:-1:-1;;;;;161:1635:5;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;161:1635:5;;;;;;;;;;-1:-1:-1;161:1635:5;;;;;;;734:10:3;;161:1635:5;;;;-1:-1:-1;161:1635:5;;;734:10:3;;161:1635:5;;2566:40:0;-1:-1:-1;2566:40:0;;161:1635:5;;;;;;;;;;;;;;-1:-1:-1;161:1635:5;;;;;;-1:-1:-1;161:1635:5;;;;;-1:-1:-1;161:1635:5"},"deployedBytecode":{"functionDebugData":{"abi_decode_array_uint256_dyn_fromMemory":{"entryPoint":871,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes_calldatat_uint256":{"entryPoint":644,"id":null,"parameterSlots":1,"returnSlots":3},"abi_encode_bytes_calldata":{"entryPoint":974,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_stringliteral_7cc7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":815,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":727,"id":54,"parameterSlots":0,"returnSlots":0},"fun_getPriceData":{"entryPoint":1093,"id":631,"parameterSlots":3,"returnSlots":2},"fun_getPriceDataWithRound":{"entryPoint":1524,"id":714,"parameterSlots":3,"returnSlots":3},"increment_uint256":{"entryPoint":1014,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":1051,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"604060808152600436101561001357600080fd5b600090813560e01c908163715018a61461022a5781637dc0d1d0146102015781638da5cb5b146101d95781639807d25d146101b4578163a46d47ce14610186578163f2fde38b146100be575063f7023bb61461006e57600080fd5b346100bb5760203660031901126100bb576004356001600160a01b038116908190036100b75761009c6102d7565b6bffffffffffffffffffffffff60a01b600154161760015580f35b5080fd5b80fd5b9050346100b75760203660031901126100b7576001600160a01b036004358181169290839003610182576100f06102d7565b8215610130575082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b5162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b8380fd5b9050346100b7576060906101a261019c36610284565b916105f4565b91929081519384526020840152820152f35b82346100bb57506101cd6101c736610284565b91610445565b82519182526020820152f35b9050346100b757816003193601126100b757905490516001600160a01b039091168152602090f35b9050346100b757816003193601126100b75760015490516001600160a01b039091168152602090f35b82346100bb57806003193601126100bb576102436102d7565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b9060406003198301126102d25760043567ffffffffffffffff928382116102d257806023830112156102d25781600401359384116102d257602484830101116102d257602401919060243590565b600080fd5b6000546001600160a01b031633036102eb57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff82111761035157604052565b634e487b7160e01b600052604160045260246000fd5b9080601f830112156102d25781519067ffffffffffffffff8211610351578160051b6040519360209361039c8584018761032f565b855283808601928201019283116102d2578301905b8282106103bf575050505090565b815181529083019083016103b1565b90918060409360208452816020850152848401376000828201840152601f01601f1916010190565b60001981146104055760010190565b634e487b7160e01b600052601160045260246000fd5b805182101561042f5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b926104799260008060019460018060a01b03865416604098838a51809a81958294632ce81dbd60e21b8452600484016103ce565b03925af19485156105e857819561051e575b50835b6104c8575b855162461bcd60e51b815260206004820152600e60248201526d14185a5c881b9bdd08199bdd5b9960921b6044820152606490fd5b84518051821015610518576104de82849261041b565b51146104f3576104ed906103f6565b8361048e565b9193949050610514925061050b82602087015161041b565b5194015161041b565b5190565b50610493565b9094503d8086833e610530818361032f565b81016020828203126105e457815167ffffffffffffffff928382116105c45701916060838303126105e05787519260608401848110838211176105cc57895280518281116105c85783610584918301610367565b845260208101518281116105c8578361059e918301610367565b6020850152888101519182116105c4576105b9929101610367565b86820152933861048b565b8780fd5b8880fd5b634e487b7160e01b89526041600452602489fd5b8680fd5b8580fd5b508551903d90823e3d90fd5b926106289260008060019460018060a01b03865416604098838a51809a81958294633dcd979360e01b8452600484016103ce565b03925af19485156105e8578195610713575b50835b61067657855162461bcd60e51b815260206004820152600e60248201526d14185a5c881b9bdd08199bdd5b9960921b6044820152606490fd5b845180518210156105185761068c82849261041b565b51146106a15761069b906103f6565b8361063d565b936106fa959293507f5396f73806124013c800248a3abdf9e9fffe444d69b665b4edf9c9584c05ffa0916020956106db818885015161041b565b5194856106eb838387015161041b565b51998a9360808097015161041b565b51988251948552840152820152856060820152a1929190565b9094503d8086833e610725818361032f565b81016020828203126105e457815167ffffffffffffffff928382116105c457019160a0838303126105e05787519260a08401848110838211176105cc57895280518281116105c85783610779918301610367565b845260208101518281116105c85783610793918301610367565b6020850152888101518281116105c857836107af918301610367565b8985015260608101518281116105c857836107cb918301610367565b606085015260808101519182116105c4576107e7929101610367565b6080820152933861063a56fea2646970667358221220988c73bce0984a386f70dba032153d7430f44e7704dd706bb739cd1de17552ca64736f6c63430008130033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x715018A6 EQ PUSH2 0x22A JUMPI DUP2 PUSH4 0x7DC0D1D0 EQ PUSH2 0x201 JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D9 JUMPI DUP2 PUSH4 0x9807D25D EQ PUSH2 0x1B4 JUMPI DUP2 PUSH4 0xA46D47CE EQ PUSH2 0x186 JUMPI DUP2 PUSH4 0xF2FDE38B EQ PUSH2 0xBE JUMPI POP PUSH4 0xF7023BB6 EQ PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xBB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xBB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xB7 JUMPI PUSH2 0x9C PUSH2 0x2D7 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xB7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x182 JUMPI PUSH2 0xF0 PUSH2 0x2D7 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x130 JUMPI POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xB7 JUMPI PUSH1 0x60 SWAP1 PUSH2 0x1A2 PUSH2 0x19C CALLDATASIZE PUSH2 0x284 JUMP JUMPDEST SWAP2 PUSH2 0x5F4 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0xBB JUMPI POP PUSH2 0x1CD PUSH2 0x1C7 CALLDATASIZE PUSH2 0x284 JUMP JUMPDEST SWAP2 PUSH2 0x445 JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xB7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB7 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xB7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB7 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0xBB JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xBB JUMPI PUSH2 0x243 PUSH2 0x2D7 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x2D2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 GT PUSH2 0x2D2 JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x2D2 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x2D2 JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x2D2 JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2EB JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x351 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2D2 JUMPI DUP2 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x351 JUMPI DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD SWAP4 PUSH1 0x20 SWAP4 PUSH2 0x39C DUP6 DUP5 ADD DUP8 PUSH2 0x32F JUMP JUMPDEST DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x2D2 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3BF JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x3B1 JUMP JUMPDEST SWAP1 SWAP2 DUP1 PUSH1 0x40 SWAP4 PUSH1 0x20 DUP5 MSTORE DUP2 PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x405 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x42F JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 PUSH2 0x479 SWAP3 PUSH1 0x0 DUP1 PUSH1 0x1 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 SLOAD AND PUSH1 0x40 SWAP9 DUP4 DUP11 MLOAD DUP1 SWAP11 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x2CE81DBD PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x3CE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x5E8 JUMPI DUP2 SWAP6 PUSH2 0x51E JUMPI JUMPDEST POP DUP4 JUMPDEST PUSH2 0x4C8 JUMPI JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x14185A5C881B9BDD08199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x518 JUMPI PUSH2 0x4DE DUP3 DUP5 SWAP3 PUSH2 0x41B JUMP JUMPDEST MLOAD EQ PUSH2 0x4F3 JUMPI PUSH2 0x4ED SWAP1 PUSH2 0x3F6 JUMP JUMPDEST DUP4 PUSH2 0x48E JUMP JUMPDEST SWAP2 SWAP4 SWAP5 SWAP1 POP PUSH2 0x514 SWAP3 POP PUSH2 0x50B DUP3 PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x41B JUMP JUMPDEST MLOAD SWAP5 ADD MLOAD PUSH2 0x41B JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST POP PUSH2 0x493 JUMP JUMPDEST SWAP1 SWAP5 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x530 DUP2 DUP4 PUSH2 0x32F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x5E4 JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 GT PUSH2 0x5C4 JUMPI ADD SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x5E0 JUMPI DUP8 MLOAD SWAP3 PUSH1 0x60 DUP5 ADD DUP5 DUP2 LT DUP4 DUP3 GT OR PUSH2 0x5CC JUMPI DUP10 MSTORE DUP1 MLOAD DUP3 DUP2 GT PUSH2 0x5C8 JUMPI DUP4 PUSH2 0x584 SWAP2 DUP4 ADD PUSH2 0x367 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD DUP3 DUP2 GT PUSH2 0x5C8 JUMPI DUP4 PUSH2 0x59E SWAP2 DUP4 ADD PUSH2 0x367 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE DUP9 DUP2 ADD MLOAD SWAP2 DUP3 GT PUSH2 0x5C4 JUMPI PUSH2 0x5B9 SWAP3 SWAP2 ADD PUSH2 0x367 JUMP JUMPDEST DUP7 DUP3 ADD MSTORE SWAP4 CODESIZE PUSH2 0x48B JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP DUP6 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 PUSH2 0x628 SWAP3 PUSH1 0x0 DUP1 PUSH1 0x1 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 SLOAD AND PUSH1 0x40 SWAP9 DUP4 DUP11 MLOAD DUP1 SWAP11 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x3DCD9793 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x3CE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x5E8 JUMPI DUP2 SWAP6 PUSH2 0x713 JUMPI JUMPDEST POP DUP4 JUMPDEST PUSH2 0x676 JUMPI DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x14185A5C881B9BDD08199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x518 JUMPI PUSH2 0x68C DUP3 DUP5 SWAP3 PUSH2 0x41B JUMP JUMPDEST MLOAD EQ PUSH2 0x6A1 JUMPI PUSH2 0x69B SWAP1 PUSH2 0x3F6 JUMP JUMPDEST DUP4 PUSH2 0x63D JUMP JUMPDEST SWAP4 PUSH2 0x6FA SWAP6 SWAP3 SWAP4 POP PUSH32 0x5396F73806124013C800248A3ABDF9E9FFFE444D69B665B4EDF9C9584C05FFA0 SWAP2 PUSH1 0x20 SWAP6 PUSH2 0x6DB DUP2 DUP9 DUP6 ADD MLOAD PUSH2 0x41B JUMP JUMPDEST MLOAD SWAP5 DUP6 PUSH2 0x6EB DUP4 DUP4 DUP8 ADD MLOAD PUSH2 0x41B JUMP JUMPDEST MLOAD SWAP10 DUP11 SWAP4 PUSH1 0x80 DUP1 SWAP8 ADD MLOAD PUSH2 0x41B JUMP JUMPDEST MLOAD SWAP9 DUP3 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE DUP6 PUSH1 0x60 DUP3 ADD MSTORE LOG1 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP5 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x725 DUP2 DUP4 PUSH2 0x32F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x5E4 JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 GT PUSH2 0x5C4 JUMPI ADD SWAP2 PUSH1 0xA0 DUP4 DUP4 SUB SLT PUSH2 0x5E0 JUMPI DUP8 MLOAD SWAP3 PUSH1 0xA0 DUP5 ADD DUP5 DUP2 LT DUP4 DUP3 GT OR PUSH2 0x5CC JUMPI DUP10 MSTORE DUP1 MLOAD DUP3 DUP2 GT PUSH2 0x5C8 JUMPI DUP4 PUSH2 0x779 SWAP2 DUP4 ADD PUSH2 0x367 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD DUP3 DUP2 GT PUSH2 0x5C8 JUMPI DUP4 PUSH2 0x793 SWAP2 DUP4 ADD PUSH2 0x367 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE DUP9 DUP2 ADD MLOAD DUP3 DUP2 GT PUSH2 0x5C8 JUMPI DUP4 PUSH2 0x7AF SWAP2 DUP4 ADD PUSH2 0x367 JUMP JUMPDEST DUP10 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD DUP3 DUP2 GT PUSH2 0x5C8 JUMPI DUP4 PUSH2 0x7CB SWAP2 DUP4 ADD PUSH2 0x367 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD SWAP2 DUP3 GT PUSH2 0x5C4 JUMPI PUSH2 0x7E7 SWAP3 SWAP2 ADD PUSH2 0x367 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE SWAP4 CODESIZE PUSH2 0x63A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 DUP13 PUSH20 0xBCE0984A386F70DBA032153D7430F44E7704DD70 PUSH12 0xB739CD1DE17552CA64736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"161:1635:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;161:1635:5;;;;;;-1:-1:-1;;;;;161:1635:5;;;;;;;;1063:62:0;;:::i;:::-;161:1635:5;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;161:1635:5;;;;-1:-1:-1;;;;;161:1635:5;;;;;;;;;;;;1063:62:0;;:::i;:::-;2162:22;;161:1635:5;;-1:-1:-1;161:1635:5;;-1:-1:-1;;;;;;161:1635:5;;;;;;;2566:40:0;161:1635:5;;2566:40:0;161:1635:5;;;;-1:-1:-1;;;161:1635:5;;;;;;;;;;;;;;;;;-1:-1:-1;;;161:1635:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;161:1635:5;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;161:1635:5;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;161:1635:5;;-1:-1:-1;;;;;;161:1635:5;;;;;;-1:-1:-1;;;;;161:1635:5;2566:40:0;161:1635:5;;2566:40:0;161:1635:5;;;;;-1:-1:-1;;161:1635:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;161:1635:5;;1359:130:0;1273:6;161:1635:5;-1:-1:-1;;;;;161:1635:5;734:10:3;1422:23:0;161:1635:5;;1359:130:0:o;161:1635:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;161:1635:5;;;;:::o;:::-;-1:-1:-1;;161:1635:5;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;456:480;;651:37;456:480;161:1635;651:6;;161:1635;;;;;;;;;;;;;;;;;;;;;;;651:37;;;;;;:::i;:::-;;;;;;;;;;;;;;456:480;714:13;;651:6;;;709:185;161:1635;;-1:-1:-1;;;904:24:5;;161:1635;651:37;904:24;;161:1635;;;;;;-1:-1:-1;;;161:1635:5;;;;;;904:24;754:3;733:12;;161:1635;;729:23;;;;;778:15;;;;;:::i;:::-;161:1635;778:23;774:109;;754:3;;;:::i;:::-;714:13;;;774:109;830:13;;;;;848:18;830:13;;:16;:13;;;;;:16;:::i;:::-;161:1635;848:15;;;:18;:::i;:::-;161:1635;822:45;:::o;729:23::-;;;;651:37;;;;;;;;;;;;;:::i;:::-;;;161:1635;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;651:37;;;;161:1635;;;;;;;;;-1:-1:-1;;;161:1635:5;;;651:37;161:1635;;;;;;;;;;;;651:37;161:1635;;;;;;;;;;;948:697;;1168:39;948:697;161:1635;1168:6;;161:1635;;;;;;;;;;;;;;;;;;;;;;;1168:39;;;;;;:::i;:::-;;;;;;;;;;;;;;948:697;1233:13;;1168:6;;;161:1635;;-1:-1:-1;;;1613:24:5;;161:1635;1168:39;1613:24;;161:1635;;;;;;-1:-1:-1;;;161:1635:5;;;;;;904:24;1273:3;1252:12;;161:1635;;1248:23;;;;;1297:15;;;;;:::i;:::-;161:1635;1297:23;1293:299;;1273:3;;;:::i;:::-;1233:13;;;1293:299;1349:13;1442:15;1349:13;;;;1481:44;1349:13;;;:16;:13;;;;;:16;:::i;:::-;161:1635;1396:16;;:19;:16;;;;;:19;:::i;:::-;161:1635;1442:12;;;;;;;;:15;:::i;:::-;161:1635;;;;;;;;;;;;;;;;;;1481:44;1544:32;;;:::o;1168:39::-;;;;;;;;;;;;;:::i;:::-;;;161:1635;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1168:39;;;"},"gasEstimates":{"creation":{"codeDepositCost":"417800","executionCost":"infinite","totalCost":"infinite"},"external":{"getPriceData(bytes,uint256)":"infinite","getPriceDataWithRound(bytes,uint256)":"infinite","oracle()":"2313","owner()":"2335","renounceOwnership()":"28067","transferOwnership(address)":"28243","updateOracleAddress(address)":"26705"}},"methodIdentifiers":{"getPriceData(bytes,uint256)":"9807d25d","getPriceDataWithRound(bytes,uint256)":"a46d47ce","oracle()":"7dc0d1d0","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","updateOracleAddress(address)":"f7023bb6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pair\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"PriceReceived\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_bytesProof\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"pair\",\"type\":\"uint256\"}],\"name\":\"getPriceData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_bytesProof\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"pair\",\"type\":\"uint256\"}],\"name\":\"getPriceDataWithRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract ISupraOraclePull\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOracleAddress\",\"type\":\"address\"}],\"name\":\"updateOracleAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/PriceConsumer.sol\":\"PriceConsumer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"src/contracts/PriceConsumer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.19;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"./interfaces/ISupraOraclePull.sol\\\";\\r\\n\\r\\ncontract PriceConsumer is Ownable {\\r\\n    ISupraOraclePull public oracle;\\r\\n    \\r\\n    event PriceReceived(uint256 pair, uint256 price, uint256 timestamp, uint256 round);\\r\\n    \\r\\n    constructor(address oracleAddress) Ownable() {\\r\\n        oracle = ISupraOraclePull(oracleAddress);\\r\\n    }\\r\\n    \\r\\n    function getPriceData(bytes calldata _bytesProof, uint256 pair) \\r\\n        external \\r\\n        returns (uint256 price, uint256 decimals) \\r\\n    {\\r\\n        ISupraOraclePull.PriceData memory prices = oracle.verifyOracleProof(_bytesProof);\\r\\n        \\r\\n        for (uint256 i = 0; i < prices.pairs.length; i++) {\\r\\n            if (prices.pairs[i] == pair) {\\r\\n                return (prices.prices[i], prices.decimals[i]);\\r\\n            }\\r\\n        }\\r\\n        revert(\\\"Pair not found\\\");\\r\\n    }\\r\\n    \\r\\n    function getPriceDataWithRound(bytes calldata _bytesProof, uint256 pair) \\r\\n        external \\r\\n        returns (uint256 price, uint256 timestamp, uint256 round) \\r\\n    {\\r\\n        ISupraOraclePull.PriceInfo memory prices = oracle.verifyOracleProofV2(_bytesProof);\\r\\n        \\r\\n        for (uint256 i = 0; i < prices.pairs.length; i++) {\\r\\n            if (prices.pairs[i] == pair) {\\r\\n                price = prices.prices[i];\\r\\n                timestamp = prices.timestamp[i];\\r\\n                round = prices.round[i];\\r\\n                emit PriceReceived(pair, price, timestamp, round);\\r\\n                return (price, timestamp, round);\\r\\n            }\\r\\n        }\\r\\n        revert(\\\"Pair not found\\\");\\r\\n    }\\r\\n    \\r\\n    function updateOracleAddress(address newOracleAddress) external onlyOwner {\\r\\n        oracle = ISupraOraclePull(newOracleAddress);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xd73c5b606ad3ca3bc6c5a297dd838eaf5c7a8787bf2e642ea61b3836951d791f\",\"license\":\"MIT\"},\"src/contracts/interfaces/ISupraOraclePull.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.19;\\r\\n\\r\\ninterface ISupraOraclePull {\\r\\n    struct PriceData {\\r\\n        uint256[] pairs;\\r\\n        uint256[] prices;\\r\\n        uint256[] decimals;\\r\\n    }\\r\\n\\r\\n    struct PriceInfo {\\r\\n        uint256[] pairs;\\r\\n        uint256[] prices;\\r\\n        uint256[] timestamp;\\r\\n        uint256[] decimal;\\r\\n        uint256[] round;\\r\\n    }\\r\\n\\r\\n    function verifyOracleProof(bytes calldata _bytesproof) \\r\\n        external \\r\\n        returns (PriceData memory);\\r\\n\\r\\n    function verifyOracleProofV2(bytes calldata _bytesProof) \\r\\n        external     \\r\\n        returns (PriceInfo memory);\\r\\n}\",\"keccak256\":\"0xde0d45d9927cb8431657bfac4421502004d01fcf351219977e20ccb121556ffc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"src/contracts/PriceConsumer.sol:PriceConsumer","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":549,"contract":"src/contracts/PriceConsumer.sol:PriceConsumer","label":"oracle","offset":0,"slot":"1","type":"t_contract(ISupraOraclePull)842"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(ISupraOraclePull)842":{"encoding":"inplace","label":"contract ISupraOraclePull","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/contracts/interfaces/ILayerZeroEndpoint.sol":{"ILayerZeroEndpoint":{"abi":[{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"address","name":"_userApplication","type":"address"},{"internalType":"bytes","name":"_payload","type":"bytes"},{"internalType":"bool","name":"_payInZRO","type":"bool"},{"internalType":"bytes","name":"_adapterParam","type":"bytes"}],"name":"estimateFees","outputs":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"zroFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"getInboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"address","name":"_srcAddress","type":"address"}],"name":"getOutboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"address","name":"_dstAddress","type":"address"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"uint256","name":"_gasLimit","type":"uint256"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"receivePayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"bytes","name":"_destination","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"},{"internalType":"address payable","name":"_refundAddress","type":"address"},{"internalType":"address","name":"_zroPaymentAddress","type":"address"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"send","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"estimateFees(uint16,address,bytes,bool,bytes)":"40a7bb10","getInboundNonce(uint16,bytes)":"fdc07c70","getOutboundNonce(uint16,address)":"7a145748","receivePayload(uint16,bytes,address,uint64,uint256,bytes)":"c2fa4813","send(uint16,bytes,bytes,address,address,bytes)":"c5803100"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_payInZRO\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParam\",\"type\":\"bytes\"}],\"name\":\"estimateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"getInboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_srcAddress\",\"type\":\"address\"}],\"name\":\"getOutboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"receivePayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_destination\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zroPaymentAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/interfaces/ILayerZeroEndpoint.sol\":\"ILayerZeroEndpoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/contracts/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.19;\\r\\n\\r\\ninterface ILayerZeroEndpoint {\\r\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _destination - the address on destination chain (in bytes)\\r\\n    // @param _payload - a custom bytes payload to send to the destination contract\\r\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\r\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\r\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\r\\n    function send(\\r\\n        uint16 _dstChainId,\\r\\n        bytes calldata _destination,\\r\\n        bytes calldata _payload,\\r\\n        address payable _refundAddress,\\r\\n        address _zroPaymentAddress,\\r\\n        bytes calldata _adapterParams\\r\\n    ) external payable;\\r\\n\\r\\n    // @notice used by the messaging library to publish verified payload\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\r\\n    // @param _dstAddress - the address on destination chain\\r\\n    // @param _nonce - the ordered message nonce\\r\\n    // @param _gasLimit - the gas limit for external contract execution\\r\\n    // @param _payload - verified payload to send to the destination contract\\r\\n    function receivePayload(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress,\\r\\n        address _dstAddress,\\r\\n        uint64 _nonce,\\r\\n        uint _gasLimit,\\r\\n        bytes calldata _payload\\r\\n    ) external;\\r\\n\\r\\n    // @notice get the inboundNonce of a receiver from a source chain\\r\\n    // @param _srcChainId - the source chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getInboundNonce(\\r\\n        uint16 _srcChainId,\\r\\n        bytes calldata _srcAddress\\r\\n    ) external view returns (uint64);\\r\\n\\r\\n    // @notice get the outboundNonce from this source chain to a destination chain\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _srcAddress - the source chain contract address\\r\\n    function getOutboundNonce(\\r\\n        uint16 _dstChainId,\\r\\n        address _srcAddress\\r\\n    ) external view returns (uint64);\\r\\n\\r\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\r\\n    // @param _dstChainId - the destination chain identifier\\r\\n    // @param _userApplication - the user app address on this chain\\r\\n    // @param _payload - the custom message to send over LayerZero\\r\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\r\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\r\\n    function estimateFees(\\r\\n        uint16 _dstChainId,\\r\\n        address _userApplication,\\r\\n        bytes calldata _payload,\\r\\n        bool _payInZRO,\\r\\n        bytes calldata _adapterParam\\r\\n    ) external view returns (uint nativeFee, uint zroFee);\\r\\n}\\r\\n\",\"keccak256\":\"0xee25928d1bfb4cd214526d6af78ab4f080cd4efb0ea7ae0b4087b33ad808fefd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/contracts/interfaces/ISupraOraclePull.sol":{"ISupraOraclePull":{"abi":[{"inputs":[{"internalType":"bytes","name":"_bytesproof","type":"bytes"}],"name":"verifyOracleProof","outputs":[{"components":[{"internalType":"uint256[]","name":"pairs","type":"uint256[]"},{"internalType":"uint256[]","name":"prices","type":"uint256[]"},{"internalType":"uint256[]","name":"decimals","type":"uint256[]"}],"internalType":"struct ISupraOraclePull.PriceData","name":"","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"_bytesProof","type":"bytes"}],"name":"verifyOracleProofV2","outputs":[{"components":[{"internalType":"uint256[]","name":"pairs","type":"uint256[]"},{"internalType":"uint256[]","name":"prices","type":"uint256[]"},{"internalType":"uint256[]","name":"timestamp","type":"uint256[]"},{"internalType":"uint256[]","name":"decimal","type":"uint256[]"},{"internalType":"uint256[]","name":"round","type":"uint256[]"}],"internalType":"struct ISupraOraclePull.PriceInfo","name":"","type":"tuple"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"verifyOracleProof(bytes)":"b3a076f4","verifyOracleProofV2(bytes)":"3dcd9793"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_bytesproof\",\"type\":\"bytes\"}],\"name\":\"verifyOracleProof\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"pairs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"prices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimals\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ISupraOraclePull.PriceData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_bytesProof\",\"type\":\"bytes\"}],\"name\":\"verifyOracleProofV2\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"pairs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"prices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"timestamp\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimal\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"round\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ISupraOraclePull.PriceInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/interfaces/ISupraOraclePull.sol\":\"ISupraOraclePull\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/contracts/interfaces/ISupraOraclePull.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.19;\\r\\n\\r\\ninterface ISupraOraclePull {\\r\\n    struct PriceData {\\r\\n        uint256[] pairs;\\r\\n        uint256[] prices;\\r\\n        uint256[] decimals;\\r\\n    }\\r\\n\\r\\n    struct PriceInfo {\\r\\n        uint256[] pairs;\\r\\n        uint256[] prices;\\r\\n        uint256[] timestamp;\\r\\n        uint256[] decimal;\\r\\n        uint256[] round;\\r\\n    }\\r\\n\\r\\n    function verifyOracleProof(bytes calldata _bytesproof) \\r\\n        external \\r\\n        returns (PriceData memory);\\r\\n\\r\\n    function verifyOracleProofV2(bytes calldata _bytesProof) \\r\\n        external     \\r\\n        returns (PriceInfo memory);\\r\\n}\",\"keccak256\":\"0xde0d45d9927cb8431657bfac4421502004d01fcf351219977e20ccb121556ffc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}